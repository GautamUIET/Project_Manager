{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/Header/index.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  buttonComponent?: any;\r\n  isSmallText?: boolean;\r\n};\r\n\r\nconst Header = ({ name, buttonComponent, isSmallText = false }: Props) => {\r\n  return (\r\n    <div className=\"mb-5 flex w-full items-center justify-between\">\r\n      <h1\r\n        className={`${isSmallText ? \"text-lg\" : \"text-2xl\"} font-semibold dark:text-white`}\r\n      >\r\n        {name}\r\n      </h1>\r\n      {buttonComponent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;"],"names":[],"mappings":";;;;;AAQA,MAAM,SAAS,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,cAAc,KAAK,EAAS;IACnE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAW,GAAG,cAAc,YAAY,WAAW,8BAA8B,CAAC;0BAEjF;;;;;;YAEF;;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/Modal/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Header from \"../Header\";\r\nimport { X } from \"lucide-react\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  name: string;\r\n};\r\n\r\nconst Modal = ({ children, isOpen, onClose, name }: Props) => {\r\n  if (!isOpen) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"fixed inset-0 z-50 flex h-full w-full items-center justify-center overflow-y-auto bg-gray-600 bg-opacity-50 p-4\">\r\n      <div className=\"w-full max-w-2xl rounded-lg bg-white p-4 shadow-lg dark:bg-dark-secondary\">\r\n        <Header\r\n          name={name}\r\n          buttonComponent={\r\n            <button\r\n              className=\"flex h-7 w-7 items-center justify-center rounded-full bg-blue-primary text-white hover:bg-blue-600\"\r\n              onClick={onClose}\r\n            >\r\n              <X size={18} />\r\n            </button>\r\n          }\r\n          isSmallText\r\n        />\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    document.body,\r\n  );\r\n};\r\n\r\nexport default Modal;"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AASA,MAAM,QAAQ,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAS;IACvD,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBAAO,4MAAA,CAAA,UAAQ,CAAC,YAAY,eAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,gJAAA,CAAA,UAAM;oBACL,MAAM;oBACN,+BACE,8OAAC;wBACC,WAAU;wBACV,SAAS;kCAET,cAAA,8OAAC,4LAAA,CAAA,IAAC;4BAAC,MAAM;;;;;;;;;;;oBAGb,WAAW;;;;;;gBAEZ;;;;;;;;;;;cAGL,SAAS,IAAI;AAEjB;uCAEe","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/ModalNewTask/index.tsx"],"sourcesContent":["import Modal from \"../Modal\";\r\nimport { Priority, Status, useCreateTaskMutation } from \"@/state/api\";\r\nimport React, { useState } from \"react\";\r\nimport { formatISO } from \"date-fns\";\r\n\r\ntype Props = {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  id?: string | null;\r\n};\r\n\r\nconst ModalNewTask = ({ isOpen, onClose, id = null }: Props) => {\r\n  const [createTask, { isLoading }] = useCreateTaskMutation();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [status, setStatus] = useState<Status>(Status.ToDo);\r\n  const [priority, setPriority] = useState<Priority>(Priority.Backlog);\r\n  const [tags, setTags] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [authorUserId, setAuthorUserId] = useState(\"\");\r\n  const [assignedUserId, setAssignedUserId] = useState(\"\");\r\n  const [projectId, setProjectId] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    if (!title || !authorUserId || !(id !== null || projectId)) return;\r\n\r\n    const formattedStartDate = formatISO(new Date(startDate), {\r\n      representation: \"complete\",\r\n    });\r\n    const formattedDueDate = formatISO(new Date(dueDate), {\r\n      representation: \"complete\",\r\n    });\r\n\r\n    await createTask({\r\n      title,\r\n      description,\r\n      status,\r\n      priority,\r\n      tags,\r\n      startDate: formattedStartDate,\r\n      dueDate: formattedDueDate,\r\n      authorUserId: parseInt(authorUserId),\r\n      assignedUserId: parseInt(assignedUserId),\r\n      projectId: id !== null ? Number(id) : Number(projectId),\r\n    });\r\n\r\n    onClose();\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return title && authorUserId ;\r\n  };\r\n\r\n  const selectStyles =\r\n    \"mb-4 block w-full rounded border border-gray-300 px-3 py-2 dark:border-dark-tertiary dark:bg-dark-tertiary dark:text-white dark:focus:outline-none\";\r\n\r\n  const inputStyles =\r\n    \"w-full rounded border border-gray-300 p-2 shadow-sm dark:border-dark-tertiary dark:bg-dark-tertiary dark:text-white dark:focus:outline-none\";\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} name=\"Create New Task\">\r\n      <form\r\n        className=\"mt-4 space-y-6\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          handleSubmit();\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className={inputStyles}\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          className={inputStyles}\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 sm:gap-2\">\r\n          <select\r\n            className={selectStyles}\r\n            value={status}\r\n            onChange={(e) =>\r\n              setStatus(Status[e.target.value as keyof typeof Status])\r\n            }\r\n          >\r\n            <option value=\"\">Select Status</option>\r\n            <option value={Status.ToDo}>To Do</option>\r\n            <option value={Status.WorkInProgress}>Work In Progress</option>\r\n            <option value={Status.UnderReview}>Under Review</option>\r\n            <option value={Status.Completed}>Completed</option>\r\n          </select>\r\n          <select\r\n            className={selectStyles}\r\n            value={priority}\r\n            onChange={(e) =>\r\n              setPriority(Priority[e.target.value as keyof typeof Priority])\r\n            }\r\n          >\r\n            <option value=\"\">Select Priority</option>\r\n            <option value={Priority.Urgent}>Urgent</option>\r\n            <option value={Priority.High}>High</option>\r\n            <option value={Priority.Medium}>Medium</option>\r\n            <option value={Priority.Low}>Low</option>\r\n            <option value={Priority.Backlog}>Backlog</option>\r\n          </select>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className={inputStyles}\r\n          placeholder=\"Tags (comma separated)\"\r\n          value={tags}\r\n          onChange={(e) => setTags(e.target.value)}\r\n        />\r\n\r\n        <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 sm:gap-2\">\r\n          <input\r\n            type=\"date\"\r\n            className={inputStyles}\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            className={inputStyles}\r\n            value={dueDate}\r\n            onChange={(e) => setDueDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className={inputStyles}\r\n          placeholder=\"Author User ID\"\r\n          value={authorUserId}\r\n          onChange={(e) => setAuthorUserId(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className={inputStyles}\r\n          placeholder=\"Assigned User ID\"\r\n          value={assignedUserId}\r\n          onChange={(e) => setAssignedUserId(e.target.value)}\r\n        />\r\n        {id === null && (\r\n          <input\r\n            type=\"text\"\r\n            className={inputStyles}\r\n            placeholder=\"ProjectId\"\r\n            value={projectId}\r\n            onChange={(e) => setProjectId(e.target.value)}\r\n          />\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          \r\n          className={`focus-offset-2 mt-4 flex w-full justify-center rounded-md border border-transparent bg-blue-primary px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-600 ${\r\n            !isFormValid() || isLoading ? \"cursor-not-allowed opacity-50\" : \"\"\r\n          }`}\r\n          disabled={!isFormValid() || isLoading}\r\n      \r\n        >\r\n          {isLoading ? \"Creating...\" : \"Create Task\"}\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalNewTask;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/TaskCard/index.tsx"],"sourcesContent":["// import { Task } from \"@/state/api\";\r\n// import { format } from \"date-fns\";\r\n// import Image from \"next/image\";\r\n// import React from \"react\";\r\n\r\n// type Props = {\r\n//   task: Task;\r\n// };\r\n\r\n// const TaskCard = ({ task }: Props) => {\r\n//   return (\r\n//     <div className=\"mb-3 rounded bg-white p-4 shadow dark:bg-dark-secondary dark:text-white\">\r\n//       {task.attachments && task.attachments.length > 0 && (\r\n//         <div>\r\n//           <strong>Attachments:</strong>\r\n//           <div className=\"flex flex-wrap\">\r\n//             {task.attachments && task.attachments.length > 0 && (\r\n//               <Image\r\n//                 src={`/${task.attachments[0].fileURL}`}\r\n//                 alt={task.attachments[0].fileName}\r\n//                 width={400}\r\n//                 height={200}\r\n//                 className=\"rounded-md\"\r\n//               />\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       <p>\r\n//         <strong>ID:</strong> {task.id}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Title:</strong> {task.title}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Description:</strong>{\" \"}\r\n//         {task.description || \"No description provided\"}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Status:</strong> {task.status}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Priority:</strong> {task.priority}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Tags:</strong> {task.tags || \"No tags\"}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Start Date:</strong>{\" \"}\r\n//         {task.startDate ? format(new Date(task.startDate), \"P\") : \"Not set\"}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Due Date:</strong>{\" \"}\r\n//         {task.dueDate ? format(new Date(task.dueDate), \"P\") : \"Not set\"}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Author:</strong>{\" \"}\r\n//         {task.author ? task.author.username : \"Unknown\"}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Assignee:</strong>{\" \"}\r\n//         {task.assignee ? task.assignee.username : \"Unassigned\"}\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TaskCard;\r\n\r\n\r\nimport { Task } from \"@/state/api\";\r\nimport { format } from \"date-fns\";\r\nimport Image from \"next/image\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  task: Task;\r\n};\r\n\r\nconst priorityColors = {\r\n  HIGH: \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\",\r\n  MEDIUM: \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\",\r\n  LOW: \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\",\r\n};\r\n\r\nconst statusColors = {\r\n  TODO: \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200\",\r\n  IN_PROGRESS: \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\",\r\n  DONE: \"bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200\",\r\n  BLOCKED: \"bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200\",\r\n};\r\n\r\nconst TaskCard = ({ task }: Props) => {\r\n  return (\r\n    <div className=\"mb-4 overflow-hidden rounded-lg border border-gray-200 bg-white shadow-lg transition-all hover:shadow-xl dark:border-gray-700 dark:bg-dark-secondary\">\r\n      {/* Header with title and ID */}\r\n      <div className=\"border-b border-gray-200 bg-gray-50 px-4 py-3 dark:border-gray-700 dark:bg-gray-800\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-gray-800 dark:text-white\">\r\n            {task.title}\r\n          </h3>\r\n          <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            #{task.id}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main content */}\r\n      <div className=\"p-4\">\r\n        {/* Description */}\r\n        <p className=\"mb-4 text-gray-700 dark:text-gray-300\">\r\n          {task.description || \"No description provided\"}\r\n        </p>\r\n\r\n        {/* Image attachment */}\r\n        {task.attachments && task.attachments.length > 0 && (\r\n          <div className=\"mb-4 overflow-hidden rounded-md border border-gray-200 dark:border-gray-700\">\r\n            <Image\r\n              src={`/${task.attachments[0].fileURL}`}\r\n              alt={task.attachments[0].fileName}\r\n              width={600}\r\n              height={300}\r\n              className=\"h-auto w-full object-cover\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Metadata grid */}\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          {/* Status */}\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Status\r\n            </p>\r\n            <span\r\n              className={`inline-flex items-center rounded-full px-3 py-1 text-xs font-medium  \r\n                \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200\"\r\n              }`}\r\n            >\r\n              {task.status}\r\n            </span>\r\n          </div>\r\n\r\n          {/* Priority */}\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Priority\r\n            </p>\r\n            <span\r\n              className={`inline-flex items-center rounded-full px-3 py-1 text-xs font-medium\r\n                \r\n                \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200\"\r\n              }`}\r\n            >\r\n              {task.priority}\r\n            </span>\r\n          </div>\r\n\r\n          {/* Dates */}\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Start Date\r\n            </p>\r\n            <p className=\"text-sm text-gray-800 dark:text-gray-200\">\r\n              {task.startDate\r\n                ? format(new Date(task.startDate), \"MMM d, yyyy\")\r\n                : \"Not set\"}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Due Date\r\n            </p>\r\n            <p className=\"text-sm text-gray-800 dark:text-gray-200\">\r\n              {task.dueDate\r\n                ? format(new Date(task.dueDate), \"MMM d, yyyy\")\r\n                : \"Not set\"}\r\n            </p>\r\n          </div>\r\n\r\n          {/* People */}\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Author\r\n            </p>\r\n            <p className=\"text-sm text-gray-800 dark:text-gray-200\">\r\n              {task.author ? task.author.username : \"Unknown\"}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Assignee\r\n            </p>\r\n            <p className=\"text-sm text-gray-800 dark:text-gray-200\">\r\n              {task.assignee ? task.assignee.username : \"Unassigned\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tags */}\r\n        {task.tags && (\r\n          <div className=\"mt-4\">\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Tags\r\n            </p>\r\n            <div className=\"mt-1 flex flex-wrap gap-2\">\r\n              {task.tags.split(\",\").map((tag, index) => (\r\n                <span\r\n                  key={index}\r\n                  className=\"rounded-full bg-blue-50 px-2 py-1 text-xs text-blue-600 dark:bg-blue-900/50 dark:text-blue-200\"\r\n                >\r\n                  {tag.trim()}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/lib/utils.ts"],"sourcesContent":["export const dataGridClassNames =\r\n  \"border border-gray-200 bg-white shadow hover:shadow-md transition-shadow duration-200 dark:border-stroke-dark dark:bg-dark-secondary dark:text-gray-200\";\r\n\r\nexport const dataGridSxStyles = (isDarkMode: boolean) => {\r\n  const borderColor = isDarkMode ? \"#2d3135\" : \"#e5e7eb\";\r\n  const headerBgColor = isDarkMode ? \"#1d1f21\" : \"white\";\r\n  const textColor = isDarkMode ? \"#e5e7eb\" : \"inherit\";\r\n  const iconColor = isDarkMode ? \"#a3a3a3\" : \"inherit\";\r\n  const rowHoverBg = isDarkMode ? \"#2a2e32\" : \"#f9fafb\";\r\n\r\n  return {\r\n    \"& .MuiDataGrid-root\": {\r\n      border: \"none\",\r\n    },\r\n    \"& .MuiDataGrid-columnHeaders\": {\r\n      color: textColor,\r\n      borderBottom: `1px solid ${borderColor}`,\r\n      '& [role=\"row\"] > *': {\r\n        backgroundColor: headerBgColor,\r\n        borderRight: `1px solid ${borderColor}`,\r\n        \"&:last-child\": {\r\n          borderRight: \"none\",\r\n        },\r\n      },\r\n    },\r\n    \"& .MuiDataGrid-columnHeader\": {\r\n      \"&:focus, &:focus-within\": {\r\n        outline: \"none\",\r\n      },\r\n    },\r\n    \"& .MuiDataGrid-virtualScroller\": {\r\n      backgroundColor: isDarkMode ? \"#1d1f21\" : \"white\",\r\n    },\r\n    \"& .MuiDataGrid-cell\": {\r\n      borderBottom: `1px solid ${borderColor}`,\r\n      \"&:focus, &:focus-within\": {\r\n        outline: \"none\",\r\n      },\r\n    },\r\n    \"& .MuiDataGrid-row\": {\r\n      borderBottom: `1px solid ${borderColor}`,\r\n      \"&:hover\": {\r\n        backgroundColor: rowHoverBg,\r\n      },\r\n      \"&.Mui-selected\": {\r\n        backgroundColor: isDarkMode ? \"#2a3a4a\" : \"#e0e9f5\",\r\n        \"&:hover\": {\r\n          backgroundColor: isDarkMode ? \"#2a4a5a\" : \"#d0d9e5\",\r\n        },\r\n      },\r\n    },\r\n    \"& .MuiIconButton-root\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiTablePagination-root\": {\r\n      color: textColor,\r\n      borderTop: `1px solid ${borderColor}`,\r\n    },\r\n    \"& .MuiTablePagination-selectIcon\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-menuIcon\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-sortIcon\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-footerContainer\": {\r\n      borderTop: `1px solid ${borderColor}`,\r\n    },\r\n    \"& .MuiDataGrid-toolbarContainer\": {\r\n      color: textColor,\r\n    },\r\n    \"& .MuiCheckbox-root\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-overlay\": {\r\n      color: textColor,\r\n    },\r\n  };\r\n};"],"names":[],"mappings":";;;;AAAO,MAAM,qBACX;AAEK,MAAM,mBAAmB,CAAC;IAC/B,MAAM,cAAc,aAAa,YAAY;IAC7C,MAAM,gBAAgB,aAAa,YAAY;IAC/C,MAAM,YAAY,aAAa,YAAY;IAC3C,MAAM,YAAY,aAAa,YAAY;IAC3C,MAAM,aAAa,aAAa,YAAY;IAE5C,OAAO;QACL,uBAAuB;YACrB,QAAQ;QACV;QACA,gCAAgC;YAC9B,OAAO;YACP,cAAc,CAAC,UAAU,EAAE,aAAa;YACxC,sBAAsB;gBACpB,iBAAiB;gBACjB,aAAa,CAAC,UAAU,EAAE,aAAa;gBACvC,gBAAgB;oBACd,aAAa;gBACf;YACF;QACF;QACA,+BAA+B;YAC7B,2BAA2B;gBACzB,SAAS;YACX;QACF;QACA,kCAAkC;YAChC,iBAAiB,aAAa,YAAY;QAC5C;QACA,uBAAuB;YACrB,cAAc,CAAC,UAAU,EAAE,aAAa;YACxC,2BAA2B;gBACzB,SAAS;YACX;QACF;QACA,sBAAsB;YACpB,cAAc,CAAC,UAAU,EAAE,aAAa;YACxC,WAAW;gBACT,iBAAiB;YACnB;YACA,kBAAkB;gBAChB,iBAAiB,aAAa,YAAY;gBAC1C,WAAW;oBACT,iBAAiB,aAAa,YAAY;gBAC5C;YACF;QACF;QACA,yBAAyB;YACvB,OAAO;QACT;QACA,8BAA8B;YAC5B,OAAO;YACP,WAAW,CAAC,UAAU,EAAE,aAAa;QACvC;QACA,oCAAoC;YAClC,OAAO;QACT;QACA,2BAA2B;YACzB,OAAO;QACT;QACA,2BAA2B;YACzB,OAAO;QACT;QACA,kCAAkC;YAChC,WAAW,CAAC,UAAU,EAAE,aAAa;QACvC;QACA,mCAAmC;YACjC,OAAO;QACT;QACA,uBAAuB;YACrB,OAAO;QACT;QACA,0BAA0B;YACxB,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 856, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/priority/reusablePriorityPage/index.tsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import { useAppSelector } from \"@/app/(components)/redux\";\r\n// import Header from \"@/app/(components)/Header\";\r\n// import ModalNewTask from \"@/app/(components)/ModalNewTask\";\r\n// import TaskCard from \"@/app/(components)/TaskCard\";\r\n// import { dataGridClassNames, dataGridSxStyles } from \"../../../../lib/utils\";\r\n// import {\r\n//   Priority,\r\n//   Task,\r\n//   useGetTasksByUserQuery,\r\n  \r\n// } from \"@/state/api\";\r\n// import { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\n// import React, { useState } from \"react\";\r\n\r\n// type Props = {\r\n//   priority: Priority;\r\n// };\r\n\r\n// const columns: GridColDef[] = [\r\n//   {\r\n//     field: \"title\",\r\n//     headerName: \"Title\",\r\n//     width: 100,\r\n//   },\r\n//   {\r\n//     field: \"description\",\r\n//     headerName: \"Description\",\r\n//     width: 200,\r\n//   },\r\n//   {\r\n//     field: \"status\",\r\n//     headerName: \"Status\",\r\n//     width: 130,\r\n//     renderCell: (params) => (\r\n//       <span className=\"inline-flex rounded-full bg-green-100 px-2 text-xs font-semibold leading-5 text-green-800\">\r\n//         {params.value}\r\n//       </span>\r\n//     ),\r\n//   },\r\n//   {\r\n//     field: \"priority\",\r\n//     headerName: \"Priority\",\r\n//     width: 75,\r\n//   },\r\n//   {\r\n//     field: \"tags\",\r\n//     headerName: \"Tags\",\r\n//     width: 130,\r\n//   },\r\n//   {\r\n//     field: \"startDate\",\r\n//     headerName: \"Start Date\",\r\n//     width: 130,\r\n//   },\r\n//   {\r\n//     field: \"dueDate\",\r\n//     headerName: \"Due Date\",\r\n//     width: 130,\r\n//   },\r\n//   {\r\n//     field: \"author\",\r\n//     headerName: \"Author\",\r\n//     width: 150,\r\n//     renderCell: (params) => params.value.username || \"Unknown\",\r\n//   },\r\n//   {\r\n//     field: \"assignee\",\r\n//     headerName: \"Assignee\",\r\n//     width: 150,\r\n//     renderCell: (params) => params.value.username || \"Unassigned\",\r\n//   },\r\n// ];\r\n\r\n// const ReusablePriorityPage = ({ priority }: Props) => {\r\n//   const [view, setView] = useState(\"list\");\r\n//   const [isModalNewTaskOpen, setIsModalNewTaskOpen] = useState(false);\r\n\r\n\r\n\r\n//   const isDarkMode = useAppSelector((state) => state.global.isDarkMode);\r\n\r\n\r\n//   return (\r\n//     <div className=\"m-5 p-4\">\r\n//       <ModalNewTask\r\n//         isOpen={isModalNewTaskOpen}\r\n//         onClose={() => setIsModalNewTaskOpen(false)}\r\n//       />\r\n//       <Header\r\n//         name=\"Priority Page\"\r\n//         buttonComponent={\r\n//           <button\r\n//             className=\"mr-3 rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700\"\r\n//             onClick={() => setIsModalNewTaskOpen(true)}\r\n//           >\r\n//             Add Task\r\n//           </button>\r\n//         }\r\n//       />\r\n//       <div className=\"mb-4 flex justify-start\">\r\n//         <button\r\n//           className={`px-4 py-2 ${\r\n//             view === \"list\" ? \"bg-gray-300\" : \"bg-white\"\r\n//           } rounded-l`}\r\n//           onClick={() => setView(\"list\")}\r\n//         >\r\n//           List\r\n//         </button>\r\n//         <button\r\n//           className={`px-4 py-2 ${\r\n//             view === \"table\" ? \"bg-gray-300\" : \"bg-white\"\r\n//           } rounded-l`}\r\n//           onClick={() => setView(\"table\")}\r\n//         >\r\n//           Table\r\n//         </button>\r\n//       </div>\r\n//       {isLoading ? (\r\n//         <div>Loading tasks...</div>\r\n//       ) : view === \"list\" ? (\r\n//         <div className=\"grid grid-cols-1 gap-4\">\r\n//           {filteredTasks?.map((task: Task) => (\r\n//             <TaskCard key={task.id} task={task} />\r\n//           ))}\r\n//         </div>\r\n//       ) : (\r\n//         view === \"table\" &&\r\n//         filteredTasks && (\r\n//           <div className=\"z-0 w-full\">\r\n//             <DataGrid\r\n//               rows={filteredTasks}\r\n//               columns={columns}\r\n//               checkboxSelection\r\n//               getRowId={(row) => row.id}\r\n//               className={dataGridClassNames}\r\n//               sx={dataGridSxStyles(isDarkMode)}\r\n//             />\r\n//           </div>\r\n//         )\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ReusablePriorityPage;\r\n\r\n\r\n\"use client\";\r\n\r\nimport { useAppSelector } from \"@/app/(components)/redux\";\r\nimport Header from \"@/app/(components)/Header\";\r\nimport ModalNewTask from \"@/app/(components)/ModalNewTask\";\r\nimport TaskCard from \"@/app/(components)/TaskCard\";\r\nimport { dataGridClassNames, dataGridSxStyles } from \"../../../../lib/utils\";\r\nimport {\r\n  Priority,\r\n  Task,\r\n  useGetTasksByUserQuery,\r\n} from \"@/state/api\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\nimport React, { useState } from \"react\";\r\n\r\ntype Props = {\r\n  priority: Priority;\r\n};\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: \"title\",\r\n    headerName: \"Title\",\r\n    width: 100,\r\n  },\r\n  {\r\n    field: \"description\",\r\n    headerName: \"Description\",\r\n    width: 200,\r\n  },\r\n  {\r\n    field: \"status\",\r\n    headerName: \"Status\",\r\n    width: 130,\r\n    renderCell: (params) => (\r\n      <span className=\"inline-flex rounded-full bg-green-100 px-2 text-xs font-semibold leading-5 text-green-800\">\r\n        {params.value}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    field: \"priority\",\r\n    headerName: \"Priority\",\r\n    width: 75,\r\n  },\r\n  {\r\n    field: \"tags\",\r\n    headerName: \"Tags\",\r\n    width: 130,\r\n  },\r\n  {\r\n    field: \"startDate\",\r\n    headerName: \"Start Date\",\r\n    width: 130,\r\n  },\r\n  {\r\n    field: \"dueDate\",\r\n    headerName: \"Due Date\",\r\n    width: 130,\r\n  },\r\n  {\r\n    field: \"author\",\r\n    headerName: \"Author\",\r\n    width: 150,\r\n    renderCell: (params) => params.value.username || \"Unknown\",\r\n  },\r\n  {\r\n    field: \"assignee\",\r\n    headerName: \"Assignee\",\r\n    width: 150,\r\n    renderCell: (params) => params.value.username || \"Unassigned\",\r\n  },\r\n];\r\n\r\nconst ReusablePriorityPage = ({ priority }: Props) => {\r\n  const [view, setView] = useState(\"list\");\r\n  const [isModalNewTaskOpen, setIsModalNewTaskOpen] = useState(false);\r\n  const userId = 1;\r\n\r\n\r\n  const {\r\n    data: tasks,\r\n    isLoading,\r\n    isError: isTasksError,\r\n  } = useGetTasksByUserQuery(userId || 0, {\r\n    skip: userId === null,\r\n  });\r\n\r\n  const isDarkMode = useAppSelector((state) => state.global.isDarkMode);\r\n\r\n  const filteredTasks = tasks?.filter(\r\n    (task: Task) => task.priority === priority,\r\n  );\r\n\r\n  if (isTasksError || !tasks) return <div>Error fetching tasks</div>;\r\n\r\n  return (\r\n    <div className=\"m-5 p-4\">\r\n      <ModalNewTask\r\n        isOpen={isModalNewTaskOpen}\r\n        onClose={() => setIsModalNewTaskOpen(false)}\r\n      />\r\n      <Header\r\n        name=\"Priority Page\"\r\n        buttonComponent={\r\n          <button\r\n            className=\"mr-3 rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700\"\r\n            onClick={() => setIsModalNewTaskOpen(true)}\r\n          >\r\n            Add Task\r\n          </button>\r\n        }\r\n      />\r\n      <div className=\"mb-4 flex justify-start\">\r\n        <button\r\n          className={`px-4 py-2 ${\r\n            view === \"list\" ? \"bg-gray-300\" : \"bg-white\"\r\n          } rounded-l`}\r\n          onClick={() => setView(\"list\")}\r\n        >\r\n          List\r\n        </button>\r\n        <button\r\n          className={`px-4 py-2 ${\r\n            view === \"table\" ? \"bg-gray-300\" : \"bg-white\"\r\n          } rounded-l`}\r\n          onClick={() => setView(\"table\")}\r\n        >\r\n          Table\r\n        </button>\r\n      </div>\r\n      {isLoading ? (\r\n        <div>Loading tasks...</div>\r\n      ) : view === \"list\" ? (\r\n        <div className=\"grid grid-cols-1 gap-4\">\r\n          {filteredTasks?.map((task: Task) => (\r\n            <TaskCard key={task.id} task={task} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        view === \"table\" &&\r\n        filteredTasks && (\r\n          <div className=\"z-0 w-full\">\r\n            <DataGrid\r\n              rows={filteredTasks}\r\n              columns={columns}\r\n              checkboxSelection\r\n              getRowId={(row) => row.id}\r\n              className={dataGridClassNames}\r\n              sx={dataGridSxStyles(isDarkMode)}\r\n            />\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReusablePriorityPage;"],"names":[],"mappings":"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","debugId":null}}]
}