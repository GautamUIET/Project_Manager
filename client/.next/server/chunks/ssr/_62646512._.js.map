{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/state/api.ts"],"sourcesContent":["import {createApi,fetchBaseQuery} from '@reduxjs/toolkit/query/react';\r\n\r\nexport interface Project {\r\n  id: number;\r\n  name: string;\r\n  description?: string;\r\n  startDate?: string;\r\n  endDate?: string;\r\n}\r\n\r\nexport enum Priority {\r\n  Urgent = \"Urgent\",\r\n  High = \"High\",\r\n  Medium = \"Medium\",\r\n  Low = \"Low\",\r\n  Backlog = \"Backlog\",\r\n}\r\n\r\nexport enum Status {\r\n  ToDo = \"To Do\",\r\n  WorkInProgress = \"Work In Progress\",\r\n  UnderReview = \"Under Review\",\r\n  Completed = \"Completed\",\r\n}\r\n\r\nexport interface User {\r\n  userId?: number;\r\n  username: string;\r\n  email: string;\r\n  profilePictureUrl?: string;\r\n  cognitoId?: string;\r\n  teamId?: number;\r\n}\r\n\r\nexport interface Attachment {\r\n  id: number;\r\n  fileURL: string;\r\n  fileName: string;\r\n  taskId: number;\r\n  uploadedById: number;\r\n}\r\n\r\nexport interface Task {\r\n  id: number;\r\n  title: string;\r\n  description?: string;\r\n  status?: Status;\r\n  priority?: Priority;\r\n  tags?: string;\r\n  startDate?: string;\r\n  dueDate?: string;\r\n  points?: number;\r\n  projectId: number;\r\n  authorUserId?: number;\r\n  assignedUserId?: number;\r\n\r\n  author?: User;\r\n  assignee?: User;\r\n  comments?: Comment[];\r\n  attachments?: Attachment[];\r\n}\r\n\r\nexport interface SearchResults {\r\n  tasks?: Task[];\r\n  projects?: Project[];\r\n  users?: User[];\r\n}\r\n\r\nexport interface Team {\r\n  teamId: number;\r\n  teamName: string;\r\n  productOwnerUserId?: number;\r\n  projectManagerUserId?: number;\r\n}\r\n\r\n\r\nexport const api = createApi({\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.NEXT_PUBLIC_API_BASE_URL }),\r\n  reducerPath: \"api\",\r\n  tagTypes: [\"Projects\", \"Tasks\", \"Users\", \"Teams\"],\r\n  endpoints: (build) => ({\r\n    getProjects: build.query<Project[], void>({\r\n      query: () => \"projects\",\r\n      providesTags: [\"Projects\"],\r\n    }),\r\n    createProject: build.mutation<Project, Partial<Project>>({\r\n      query: (project) => ({\r\n        url: \"projects\",\r\n        method: \"POST\",\r\n        body: project,\r\n      }),\r\n      invalidatesTags: [\"Projects\"],\r\n    }),\r\n    getTasks: build.query<Task[], { projectId: number }>({\r\n      query: ({ projectId }) => `tasks?projectId=${projectId}`,\r\n      providesTags: (result) =>\r\n        result\r\n          ? result.map(({ id }) => ({ type: \"Tasks\" as const, id }))\r\n          : [{ type: \"Tasks\" as const }],\r\n    }),\r\n    getTasksByUser: build.query<Task[], number>({\r\n      query: (userId) => `tasks/user/${userId}`,\r\n      providesTags: (result, error, userId) =>\r\n        result\r\n          ? result.map(({ id }) => ({ type: \"Tasks\", id }))\r\n          : [{ type: \"Tasks\", id: userId }],\r\n    }),\r\n    \r\n    createTask: build.mutation<Task, Partial<Task>>({\r\n      query: (task) => ({\r\n        url: \"tasks\",\r\n        method: \"POST\",\r\n        body: task,\r\n      }),\r\n      invalidatesTags: [\"Tasks\"],\r\n    }),\r\n    updateTaskStatus: build.mutation<Task, { taskId: number; status: string }>({\r\n      query: ({ taskId, status }) => ({\r\n        url: `tasks/${taskId}/status`,\r\n        method: \"PATCH\",\r\n        body: { status },\r\n      }),\r\n      invalidatesTags: (result, error, { taskId }) => [\r\n        { type: \"Tasks\", id: taskId },\r\n      ],\r\n    }),\r\n    getUsers: build.query<User[], void>({\r\n      query: () => \"users\",\r\n      providesTags: [\"Users\"],\r\n    }),\r\n    getTeams: build.query<Team[], void>({\r\n      query: () => \"teams\",\r\n      providesTags: [\"Teams\"],\r\n    }),\r\n    search: build.query<SearchResults, string>({\r\n      query: (query) => `search?query=${query}`,\r\n    }),\r\n})\r\n});\r\n\r\n\r\nexport const {\r\n  useGetProjectsQuery,\r\n  useCreateProjectMutation,\r\n  useGetTasksQuery,\r\n  useCreateTaskMutation,\r\n  useUpdateTaskStatusMutation,\r\n  useSearchQuery,\r\n  useGetUsersQuery,\r\n  useGetTeamsQuery,\r\n  useGetTasksByUserQuery,\r\n} = api;"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;;AAUO,IAAA,AAAK,kCAAA;;;;;;WAAA;;AAQL,IAAA,AAAK,gCAAA;;;;;WAAA;;AA0DL,MAAM,MAAM,CAAA,GAAA,kNAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,WAAW,CAAA,GAAA,gLAAA,CAAA,iBAAc,AAAD,EAAE;QAAE,OAAO;IAAuC;IAC1E,aAAa;IACb,UAAU;QAAC;QAAY;QAAS;QAAS;KAAQ;IACjD,WAAW,CAAC,QAAU,CAAC;YACrB,aAAa,MAAM,KAAK,CAAkB;gBACxC,OAAO,IAAM;gBACb,cAAc;oBAAC;iBAAW;YAC5B;YACA,eAAe,MAAM,QAAQ,CAA4B;gBACvD,OAAO,CAAC,UAAY,CAAC;wBACnB,KAAK;wBACL,QAAQ;wBACR,MAAM;oBACR,CAAC;gBACD,iBAAiB;oBAAC;iBAAW;YAC/B;YACA,UAAU,MAAM,KAAK,CAAgC;gBACnD,OAAO,CAAC,EAAE,SAAS,EAAE,GAAK,CAAC,gBAAgB,EAAE,WAAW;gBACxD,cAAc,CAAC,SACb,SACI,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC;4BAAE,MAAM;4BAAkB;wBAAG,CAAC,KACtD;wBAAC;4BAAE,MAAM;wBAAiB;qBAAE;YACpC;YACA,gBAAgB,MAAM,KAAK,CAAiB;gBAC1C,OAAO,CAAC,SAAW,CAAC,WAAW,EAAE,QAAQ;gBACzC,cAAc,CAAC,QAAQ,OAAO,SAC5B,SACI,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC;4BAAE,MAAM;4BAAS;wBAAG,CAAC,KAC7C;wBAAC;4BAAE,MAAM;4BAAS,IAAI;wBAAO;qBAAE;YACvC;YAEA,YAAY,MAAM,QAAQ,CAAsB;gBAC9C,OAAO,CAAC,OAAS,CAAC;wBAChB,KAAK;wBACL,QAAQ;wBACR,MAAM;oBACR,CAAC;gBACD,iBAAiB;oBAAC;iBAAQ;YAC5B;YACA,kBAAkB,MAAM,QAAQ,CAA2C;gBACzE,OAAO,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,GAAK,CAAC;wBAC9B,KAAK,CAAC,MAAM,EAAE,OAAO,OAAO,CAAC;wBAC7B,QAAQ;wBACR,MAAM;4BAAE;wBAAO;oBACjB,CAAC;gBACD,iBAAiB,CAAC,QAAQ,OAAO,EAAE,MAAM,EAAE,GAAK;wBAC9C;4BAAE,MAAM;4BAAS,IAAI;wBAAO;qBAC7B;YACH;YACA,UAAU,MAAM,KAAK,CAAe;gBAClC,OAAO,IAAM;gBACb,cAAc;oBAAC;iBAAQ;YACzB;YACA,UAAU,MAAM,KAAK,CAAe;gBAClC,OAAO,IAAM;gBACb,cAAc;oBAAC;iBAAQ;YACzB;YACA,QAAQ,MAAM,KAAK,CAAwB;gBACzC,OAAO,CAAC,QAAU,CAAC,aAAa,EAAE,OAAO;YAC3C;QACJ,CAAC;AACD;AAGO,MAAM,EACX,mBAAmB,EACnB,wBAAwB,EACxB,gBAAgB,EAChB,qBAAqB,EACrB,2BAA2B,EAC3B,cAAc,EACd,gBAAgB,EAChB,gBAAgB,EAChB,sBAAsB,EACvB,GAAG","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/redux.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(components)/redux.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx <module evaluation>\",\n    \"default\",\n);\nexport const makeStore = registerClientReference(\n    function() { throw new Error(\"Attempted to call makeStore() from the server but makeStore is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx <module evaluation>\",\n    \"makeStore\",\n);\nexport const useAppDispatch = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppDispatch() from the server but useAppDispatch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx <module evaluation>\",\n    \"useAppDispatch\",\n);\nexport const useAppSelector = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppSelector() from the server but useAppSelector is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx <module evaluation>\",\n    \"useAppSelector\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,gEACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,gEACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,gEACA","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/redux.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(components)/redux.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx\",\n    \"default\",\n);\nexport const makeStore = registerClientReference(\n    function() { throw new Error(\"Attempted to call makeStore() from the server but makeStore is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx\",\n    \"makeStore\",\n);\nexport const useAppDispatch = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppDispatch() from the server but useAppDispatch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx\",\n    \"useAppDispatch\",\n);\nexport const useAppSelector = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppSelector() from the server but useAppSelector is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx\",\n    \"useAppSelector\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,4CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,4CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,4CACA","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/Header/index.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  buttonComponent?: any;\r\n  isSmallText?: boolean;\r\n};\r\n\r\nconst Header = ({ name, buttonComponent, isSmallText = false }: Props) => {\r\n  return (\r\n    <div className=\"mb-5 flex w-full items-center justify-between\">\r\n      <h1\r\n        className={`${isSmallText ? \"text-lg\" : \"text-2xl\"} font-semibold dark:text-white`}\r\n      >\r\n        {name}\r\n      </h1>\r\n      {buttonComponent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;"],"names":[],"mappings":";;;;;AAQA,MAAM,SAAS,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,cAAc,KAAK,EAAS;IACnE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAW,GAAG,cAAc,YAAY,WAAW,8BAA8B,CAAC;0BAEjF;;;;;;YAEF;;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/page.tsx"],"sourcesContent":["import React from 'react'\nimport HomePage from './home/page'\nconst page = () => {\n  return <HomePage/>\n}\n\nexport default page"],"names":[],"mappings":";;;;AACA;;;AACA,MAAM,OAAO;IACX,qBAAO,8OAAC,2HAAA,CAAA,UAAQ;;;;;AAClB;uCAEe","debugId":null}}]
}