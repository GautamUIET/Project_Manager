{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/state/api.ts"],"sourcesContent":["import {createApi,fetchBaseQuery} from '@reduxjs/toolkit/query/react';\r\n\r\nexport interface Project {\r\n  id: number;\r\n  name: string;\r\n  description?: string;\r\n  startDate?: string;\r\n  endDate?: string;\r\n}\r\n\r\nexport enum Priority {\r\n  Urgent = \"Urgent\",\r\n  High = \"High\",\r\n  Medium = \"Medium\",\r\n  Low = \"Low\",\r\n  Backlog = \"Backlog\",\r\n}\r\n\r\nexport enum Status {\r\n  ToDo = \"To Do\",\r\n  WorkInProgress = \"Work In Progress\",\r\n  UnderReview = \"Under Review\",\r\n  Completed = \"Completed\",\r\n}\r\n\r\nexport interface User {\r\n  userId?: number;\r\n  username: string;\r\n  email: string;\r\n  profilePictureUrl?: string;\r\n  cognitoId?: string;\r\n  teamId?: number;\r\n}\r\n\r\nexport interface Attachment {\r\n  id: number;\r\n  fileURL: string;\r\n  fileName: string;\r\n  taskId: number;\r\n  uploadedById: number;\r\n}\r\n\r\nexport interface Task {\r\n  id: number;\r\n  title: string;\r\n  description?: string;\r\n  status?: Status;\r\n  priority?: Priority;\r\n  tags?: string;\r\n  startDate?: string;\r\n  dueDate?: string;\r\n  points?: number;\r\n  projectId: number;\r\n  authorUserId?: number;\r\n  assignedUserId?: number;\r\n\r\n  author?: User;\r\n  assignee?: User;\r\n  comments?: Comment[];\r\n  attachments?: Attachment[];\r\n}\r\n\r\nexport interface SearchResults {\r\n  tasks?: Task[];\r\n  projects?: Project[];\r\n  users?: User[];\r\n}\r\n\r\nexport interface Team {\r\n  teamId: number;\r\n  teamName: string;\r\n  productOwnerUserId?: number;\r\n  projectManagerUserId?: number;\r\n}\r\n\r\n\r\nexport const api = createApi({\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.NEXT_PUBLIC_API_BASE_URL }),\r\n  reducerPath: \"api\",\r\n  tagTypes: [\"Projects\", \"Tasks\", \"Users\", \"Teams\"],\r\n  endpoints: (build) => ({\r\n    getProjects: build.query<Project[], void>({\r\n      query: () => \"projects\",\r\n      providesTags: [\"Projects\"],\r\n    }),\r\n    createProject: build.mutation<Project, Partial<Project>>({\r\n      query: (project) => ({\r\n        url: \"projects\",\r\n        method: \"POST\",\r\n        body: project,\r\n      }),\r\n      invalidatesTags: [\"Projects\"],\r\n    }),\r\n    getTasks: build.query<Task[], { projectId: number }>({\r\n      query: ({ projectId }) => `tasks?projectId=${projectId}`,\r\n      providesTags: (result) =>\r\n        result\r\n          ? result.map(({ id }) => ({ type: \"Tasks\" as const, id }))\r\n          : [{ type: \"Tasks\" as const }],\r\n    }),\r\n    getTasksByUser: build.query<Task[], number>({\r\n      query: (userId) => `tasks/user/${userId}`,\r\n      providesTags: (result, error, userId) =>\r\n        result\r\n          ? result.map(({ id }) => ({ type: \"Tasks\", id }))\r\n          : [{ type: \"Tasks\", id: userId }],\r\n    }),\r\n    \r\n    createTask: build.mutation<Task, Partial<Task>>({\r\n      query: (task) => ({\r\n        url: \"tasks\",\r\n        method: \"POST\",\r\n        body: task,\r\n      }),\r\n      invalidatesTags: [\"Tasks\"],\r\n    }),\r\n    updateTaskStatus: build.mutation<Task, { taskId: number; status: string }>({\r\n      query: ({ taskId, status }) => ({\r\n        url: `tasks/${taskId}/status`,\r\n        method: \"PATCH\",\r\n        body: { status },\r\n      }),\r\n      invalidatesTags: (result, error, { taskId }) => [\r\n        { type: \"Tasks\", id: taskId },\r\n      ],\r\n    }),\r\n    getUsers: build.query<User[], void>({\r\n      query: () => \"users\",\r\n      providesTags: [\"Users\"],\r\n    }),\r\n    getTeams: build.query<Team[], void>({\r\n      query: () => \"teams\",\r\n      providesTags: [\"Teams\"],\r\n    }),\r\n    search: build.query<SearchResults, string>({\r\n      query: (query) => `search?query=${query}`,\r\n    }),\r\n})\r\n});\r\n\r\n\r\nexport const {\r\n  useGetProjectsQuery,\r\n  useCreateProjectMutation,\r\n  useGetTasksQuery,\r\n  useCreateTaskMutation,\r\n  useUpdateTaskStatusMutation,\r\n  useSearchQuery,\r\n  useGetUsersQuery,\r\n  useGetTeamsQuery,\r\n  useGetTasksByUserQuery,\r\n} = api;"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;;AAUO,IAAA,AAAK,kCAAA;;;;;;WAAA;;AAQL,IAAA,AAAK,gCAAA;;;;;WAAA;;AA0DL,MAAM,MAAM,CAAA,GAAA,kNAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,WAAW,CAAA,GAAA,gLAAA,CAAA,iBAAc,AAAD,EAAE;QAAE,OAAO;IAAuC;IAC1E,aAAa;IACb,UAAU;QAAC;QAAY;QAAS;QAAS;KAAQ;IACjD,WAAW,CAAC,QAAU,CAAC;YACrB,aAAa,MAAM,KAAK,CAAkB;gBACxC,OAAO,IAAM;gBACb,cAAc;oBAAC;iBAAW;YAC5B;YACA,eAAe,MAAM,QAAQ,CAA4B;gBACvD,OAAO,CAAC,UAAY,CAAC;wBACnB,KAAK;wBACL,QAAQ;wBACR,MAAM;oBACR,CAAC;gBACD,iBAAiB;oBAAC;iBAAW;YAC/B;YACA,UAAU,MAAM,KAAK,CAAgC;gBACnD,OAAO,CAAC,EAAE,SAAS,EAAE,GAAK,CAAC,gBAAgB,EAAE,WAAW;gBACxD,cAAc,CAAC,SACb,SACI,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC;4BAAE,MAAM;4BAAkB;wBAAG,CAAC,KACtD;wBAAC;4BAAE,MAAM;wBAAiB;qBAAE;YACpC;YACA,gBAAgB,MAAM,KAAK,CAAiB;gBAC1C,OAAO,CAAC,SAAW,CAAC,WAAW,EAAE,QAAQ;gBACzC,cAAc,CAAC,QAAQ,OAAO,SAC5B,SACI,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC;4BAAE,MAAM;4BAAS;wBAAG,CAAC,KAC7C;wBAAC;4BAAE,MAAM;4BAAS,IAAI;wBAAO;qBAAE;YACvC;YAEA,YAAY,MAAM,QAAQ,CAAsB;gBAC9C,OAAO,CAAC,OAAS,CAAC;wBAChB,KAAK;wBACL,QAAQ;wBACR,MAAM;oBACR,CAAC;gBACD,iBAAiB;oBAAC;iBAAQ;YAC5B;YACA,kBAAkB,MAAM,QAAQ,CAA2C;gBACzE,OAAO,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,GAAK,CAAC;wBAC9B,KAAK,CAAC,MAAM,EAAE,OAAO,OAAO,CAAC;wBAC7B,QAAQ;wBACR,MAAM;4BAAE;wBAAO;oBACjB,CAAC;gBACD,iBAAiB,CAAC,QAAQ,OAAO,EAAE,MAAM,EAAE,GAAK;wBAC9C;4BAAE,MAAM;4BAAS,IAAI;wBAAO;qBAC7B;YACH;YACA,UAAU,MAAM,KAAK,CAAe;gBAClC,OAAO,IAAM;gBACb,cAAc;oBAAC;iBAAQ;YACzB;YACA,UAAU,MAAM,KAAK,CAAe;gBAClC,OAAO,IAAM;gBACb,cAAc;oBAAC;iBAAQ;YACzB;YACA,QAAQ,MAAM,KAAK,CAAwB;gBACzC,OAAO,CAAC,QAAU,CAAC,aAAa,EAAE,OAAO;YAC3C;QACJ,CAAC;AACD;AAGO,MAAM,EACX,mBAAmB,EACnB,wBAAwB,EACxB,gBAAgB,EAChB,qBAAqB,EACrB,2BAA2B,EAC3B,cAAc,EACd,gBAAgB,EAChB,gBAAgB,EAChB,sBAAsB,EACvB,GAAG","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/redux.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(components)/redux.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx <module evaluation>\",\n    \"default\",\n);\nexport const makeStore = registerClientReference(\n    function() { throw new Error(\"Attempted to call makeStore() from the server but makeStore is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx <module evaluation>\",\n    \"makeStore\",\n);\nexport const useAppDispatch = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppDispatch() from the server but useAppDispatch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx <module evaluation>\",\n    \"useAppDispatch\",\n);\nexport const useAppSelector = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppSelector() from the server but useAppSelector is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx <module evaluation>\",\n    \"useAppSelector\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,gEACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,gEACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,gEACA","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/redux.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(components)/redux.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx\",\n    \"default\",\n);\nexport const makeStore = registerClientReference(\n    function() { throw new Error(\"Attempted to call makeStore() from the server but makeStore is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx\",\n    \"makeStore\",\n);\nexport const useAppDispatch = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppDispatch() from the server but useAppDispatch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx\",\n    \"useAppDispatch\",\n);\nexport const useAppSelector = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppSelector() from the server but useAppSelector is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(components)/redux.tsx\",\n    \"useAppSelector\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,4CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,4CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,4CACA","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/Header/index.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  buttonComponent?: any;\r\n  isSmallText?: boolean;\r\n};\r\n\r\nconst Header = ({ name, buttonComponent, isSmallText = false }: Props) => {\r\n  return (\r\n    <div className=\"mb-5 flex w-full items-center justify-between\">\r\n      <h1\r\n        className={`${isSmallText ? \"text-lg\" : \"text-2xl\"} font-semibold dark:text-white`}\r\n      >\r\n        {name}\r\n      </h1>\r\n      {buttonComponent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;"],"names":[],"mappings":";;;;;AAQA,MAAM,SAAS,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,cAAc,KAAK,EAAS;IACnE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAW,GAAG,cAAc,YAAY,WAAW,8BAA8B,CAAC;0BAEjF;;;;;;YAEF;;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/lib/utils.ts"],"sourcesContent":["export const dataGridClassNames =\r\n  \"border border-gray-200 bg-white shadow hover:shadow-md transition-shadow duration-200 dark:border-stroke-dark dark:bg-dark-secondary dark:text-gray-200\";\r\n\r\nexport const dataGridSxStyles = (isDarkMode: boolean) => {\r\n  const borderColor = isDarkMode ? \"#2d3135\" : \"#e5e7eb\";\r\n  const headerBgColor = isDarkMode ? \"#1d1f21\" : \"white\";\r\n  const textColor = isDarkMode ? \"#e5e7eb\" : \"inherit\";\r\n  const iconColor = isDarkMode ? \"#a3a3a3\" : \"inherit\";\r\n  const rowHoverBg = isDarkMode ? \"#2a2e32\" : \"#f9fafb\";\r\n\r\n  return {\r\n    \"& .MuiDataGrid-root\": {\r\n      border: \"none\",\r\n    },\r\n    \"& .MuiDataGrid-columnHeaders\": {\r\n      color: textColor,\r\n      borderBottom: `1px solid ${borderColor}`,\r\n      '& [role=\"row\"] > *': {\r\n        backgroundColor: headerBgColor,\r\n        borderRight: `1px solid ${borderColor}`,\r\n        \"&:last-child\": {\r\n          borderRight: \"none\",\r\n        },\r\n      },\r\n    },\r\n    \"& .MuiDataGrid-columnHeader\": {\r\n      \"&:focus, &:focus-within\": {\r\n        outline: \"none\",\r\n      },\r\n    },\r\n    \"& .MuiDataGrid-virtualScroller\": {\r\n      backgroundColor: isDarkMode ? \"#1d1f21\" : \"white\",\r\n    },\r\n    \"& .MuiDataGrid-cell\": {\r\n      borderBottom: `1px solid ${borderColor}`,\r\n      \"&:focus, &:focus-within\": {\r\n        outline: \"none\",\r\n      },\r\n    },\r\n    \"& .MuiDataGrid-row\": {\r\n      borderBottom: `1px solid ${borderColor}`,\r\n      \"&:hover\": {\r\n        backgroundColor: rowHoverBg,\r\n      },\r\n      \"&.Mui-selected\": {\r\n        backgroundColor: isDarkMode ? \"#2a3a4a\" : \"#e0e9f5\",\r\n        \"&:hover\": {\r\n          backgroundColor: isDarkMode ? \"#2a4a5a\" : \"#d0d9e5\",\r\n        },\r\n      },\r\n    },\r\n    \"& .MuiIconButton-root\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiTablePagination-root\": {\r\n      color: textColor,\r\n      borderTop: `1px solid ${borderColor}`,\r\n    },\r\n    \"& .MuiTablePagination-selectIcon\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-menuIcon\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-sortIcon\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-footerContainer\": {\r\n      borderTop: `1px solid ${borderColor}`,\r\n    },\r\n    \"& .MuiDataGrid-toolbarContainer\": {\r\n      color: textColor,\r\n    },\r\n    \"& .MuiCheckbox-root\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-overlay\": {\r\n      color: textColor,\r\n    },\r\n  };\r\n};"],"names":[],"mappings":";;;;AAAO,MAAM,qBACX;AAEK,MAAM,mBAAmB,CAAC;IAC/B,MAAM,cAAc,aAAa,YAAY;IAC7C,MAAM,gBAAgB,aAAa,YAAY;IAC/C,MAAM,YAAY,aAAa,YAAY;IAC3C,MAAM,YAAY,aAAa,YAAY;IAC3C,MAAM,aAAa,aAAa,YAAY;IAE5C,OAAO;QACL,uBAAuB;YACrB,QAAQ;QACV;QACA,gCAAgC;YAC9B,OAAO;YACP,cAAc,CAAC,UAAU,EAAE,aAAa;YACxC,sBAAsB;gBACpB,iBAAiB;gBACjB,aAAa,CAAC,UAAU,EAAE,aAAa;gBACvC,gBAAgB;oBACd,aAAa;gBACf;YACF;QACF;QACA,+BAA+B;YAC7B,2BAA2B;gBACzB,SAAS;YACX;QACF;QACA,kCAAkC;YAChC,iBAAiB,aAAa,YAAY;QAC5C;QACA,uBAAuB;YACrB,cAAc,CAAC,UAAU,EAAE,aAAa;YACxC,2BAA2B;gBACzB,SAAS;YACX;QACF;QACA,sBAAsB;YACpB,cAAc,CAAC,UAAU,EAAE,aAAa;YACxC,WAAW;gBACT,iBAAiB;YACnB;YACA,kBAAkB;gBAChB,iBAAiB,aAAa,YAAY;gBAC1C,WAAW;oBACT,iBAAiB,aAAa,YAAY;gBAC5C;YACF;QACF;QACA,yBAAyB;YACvB,OAAO;QACT;QACA,8BAA8B;YAC5B,OAAO;YACP,WAAW,CAAC,UAAU,EAAE,aAAa;QACvC;QACA,oCAAoC;YAClC,OAAO;QACT;QACA,2BAA2B;YACzB,OAAO;QACT;QACA,2BAA2B;YACzB,OAAO;QACT;QACA,kCAAkC;YAChC,WAAW,CAAC,UAAU,EAAE,aAAa;QACvC;QACA,mCAAmC;YACjC,OAAO;QACT;QACA,uBAAuB;YACrB,OAAO;QACT;QACA,0BAA0B;YACxB,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/home/page.tsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import {\r\n//   Priority,\r\n//   Project,\r\n//   Task,\r\n//   useGetProjectsQuery,\r\n//   useGetTasksQuery,\r\n// } from \"@/state/api\";\r\n// import React from \"react\";\r\n// import { useAppSelector } from \"../(components)/redux\";\r\n// import { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\n// import Header from \"../(components)/Header\";\r\n// import {\r\n//   Bar,\r\n//   BarChart,\r\n//   CartesianGrid,\r\n//   Cell,\r\n//   Legend,\r\n//   Pie,\r\n//   PieChart,\r\n//   ResponsiveContainer,\r\n//   Tooltip,\r\n//   XAxis,\r\n//   YAxis,\r\n// } from \"recharts\";\r\n// import { dataGridClassNames, dataGridSxStyles } from \"../../../lib/utils\";\r\n\r\n// const taskColumns: GridColDef[] = [\r\n//   { field: \"title\", headerName: \"Title\", width: 200 },\r\n//   { field: \"status\", headerName: \"Status\", width: 150 },\r\n//   { field: \"priority\", headerName: \"Priority\", width: 150 },\r\n//   { field: \"dueDate\", headerName: \"Due Date\", width: 150 },\r\n// ];\r\n\r\n// const COLORS = [\"#3B82F6\", \"#10B981\", \"#F59E0B\", \"#EF4444\"];\r\n\r\n// const HomePage = () => {\r\n//   const {\r\n//     data: tasks,\r\n//     isLoading: tasksLoading,\r\n//     isError: tasksError,\r\n//   } = useGetTasksQuery({ projectId: parseInt(\"1\") });\r\n//   const { data: projects, isLoading: isProjectsLoading } =\r\n//     useGetProjectsQuery();\r\n\r\n//   const isDarkMode = useAppSelector((state) => state.global.isDarkMode);\r\n\r\n//   if (tasksLoading || isProjectsLoading) return <div className=\"flex justify-center items-center h-screen text-xl font-semibold text-gray-600 dark:text-gray-300\">Loading...</div>;\r\n//   if (tasksError || !tasks || !projects) return <div className=\"flex justify-center items-center h-screen text-xl font-semibold text-red-600 dark:text-red-400\">Error fetching data</div>;\r\n\r\n//   // Debug: Log projects with parsed endDate\r\n//   console.log(\"Projects:\", projects.map(p => ({\r\n//     id: p.id,\r\n//     name: p.name,\r\n//     endDate: p.endDate,\r\n//     parsedEndDate: p.endDate ? new Date(p.endDate).toISOString() : null\r\n//   })));\r\n\r\n//   const priorityCount = tasks.reduce(\r\n//     (acc: Record<string, number>, task: Task) => {\r\n//       const { priority } = task;\r\n//       acc[priority as Priority] = (acc[priority as Priority] || 0) + 1;\r\n//       return acc;\r\n//     },\r\n//     {},\r\n//   );\r\n\r\n//   const taskDistribution = Object.keys(priorityCount).map((key) => ({\r\n//     name: key,\r\n//     count: priorityCount[key],\r\n//   }));\r\n\r\n//   const statusCount = projects.reduce(\r\n//     (acc: Record<string, number>, project: Project) => {\r\n//       const currentDate = new Date();\r\n//       const endDate = project.endDate ? new Date(project.endDate) : null;\r\n//       const status = endDate && endDate <= currentDate ? \"Completed\" : \"Active\";\r\n//       acc[status] = (acc[status] || 0) + 1;\r\n//       return acc;\r\n//     },\r\n//     {},\r\n//   );\r\n\r\n//   // Debug: Log status counts\r\n//   console.log(\"Status Count:\", statusCount);\r\n//   const projectStatus = Object.keys(statusCount).map((key) => ({\r\n//     name: key,\r\n//     count: statusCount[key],\r\n//   }));\r\n//   console.log(\"Project Status:\", projectStatus);\r\n\r\n//   const chartColors = isDarkMode\r\n//     ? {\r\n//         bar: \"url(#barGradientDark)\",\r\n//         barGrid: \"#4B5563\",\r\n//         pieFill: \"#60A5FA\",\r\n//         text: \"#F3F4F6\",\r\n//         tooltipBg: \"#1F2937\",\r\n//         tooltipText: \"#F3F4F6\",\r\n//       }\r\n//     : {\r\n//         bar: \"url(#barGradientLight)\",\r\n//         barGrid: \"#D1D5DB\",\r\n//         pieFill: \"#34D399\",\r\n//         text: \"#111827\",\r\n//         tooltipBg: \"#FFFFFF\",\r\n//         tooltipText: \"#111827\",\r\n//       };\r\n\r\n//   const CustomTooltip = ({ active, payload }: any) => {\r\n//     if (active && payload && payload.length) {\r\n//       return (\r\n//         <div className=\"rounded-lg shadow-lg p-4\" style={{ backgroundColor: chartColors.tooltipBg, color: chartColors.tooltipText }}>\r\n//           <p className=\"font-semibold\">{`${payload[0].name}: ${payload[0].value}`}</p>\r\n//         </div>\r\n//       );\r\n//     }\r\n//     return null;\r\n//   };\r\n\r\n//   const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }: any) => {\r\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n//     const x = cx + radius * Math.cos(-midAngle * (Math.PI / 180));\r\n//     const y = cy + radius * Math.sin(-midAngle * (Math.PI / 180));\r\n\r\n//     return (\r\n//       <text x={x} y={y} fill={chartColors.text} textAnchor=\"middle\" dominantBaseline=\"central\">\r\n//         {`${(percent * 100).toFixed(0)}%`}\r\n//       </text>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-200 dark:from-gray-800 dark:to-gray-900 p-6 md:p-8\">\r\n//       <Header name=\"Project Management Dashboard\" />\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//         <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 transition-all duration-300 hover:shadow-xl\">\r\n//           <h3 className=\"text-xl font-bold mb-4 text-gray-800 dark:text-gray-100\">\r\n//             Task Priority Distribution\r\n//           </h3>\r\n//           <ResponsiveContainer width=\"100%\" height={350}>\r\n//             <BarChart data={taskDistribution}>\r\n//               <defs>\r\n//                 <linearGradient id=\"barGradientLight\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n//                   <stop offset=\"0%\" stopColor=\"#3B82F6\" stopOpacity={0.9} />\r\n//                   <stop offset=\"100%\" stopColor=\"#60A5FA\" stopOpacity={0.7} />\r\n//                 </linearGradient>\r\n//                 <linearGradient id=\"barGradientDark\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n//                   <stop offset=\"0%\" stopColor=\"#60A5FA\" stopOpacity={0.9} />\r\n//                   <stop offset=\"100%\" stopColor=\"#3B82F6\" stopOpacity={0.7} />\r\n//                 </linearGradient>\r\n//               </defs>\r\n//               <CartesianGrid strokeDasharray=\"3 3\" stroke={chartColors.barGrid} />\r\n//               <XAxis dataKey=\"name\" stroke={chartColors.text} />\r\n//               <YAxis stroke={chartColors.text} />\r\n//               <Tooltip content={<CustomTooltip />} />\r\n//               <Legend />\r\n//               <Bar\r\n//                 dataKey=\"count\"\r\n//                 fill={chartColors.bar}\r\n//                 radius={[8, 8, 0, 0]}\r\n//                 animationDuration={1000}\r\n//               />\r\n//             </BarChart>\r\n//           </ResponsiveContainer>\r\n//         </div>\r\n//         <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 transition-all duration-300 hover:shadow-xl\">\r\n//           <h3 className=\"text-xl font-bold mb-4 text-gray-800 dark:text-gray-100\">\r\n//             Project Status\r\n//           </h3>\r\n//           {projectStatus.length === 1 && projectStatus[0].name === \"Completed\" && (\r\n//             <p className=\"text-gray-600 dark:text-gray-300 text-center mb-4\">\r\n//               All projects are completed. Add new projects or update existing ones to mark them as active (endDate in the future or null).\r\n//             </p>\r\n//           )}\r\n//           <ResponsiveContainer width=\"100%\" height={350}>\r\n//             <PieChart>\r\n//               <Pie\r\n//                 dataKey=\"count\"\r\n//                 data={projectStatus}\r\n//                 fill={chartColors.pieFill}\r\n//                 label={renderCustomizedLabel}\r\n//                 labelLine={false}\r\n//                 animationDuration={1000}\r\n//               >\r\n//                 {projectStatus.map((entry: { name: string; count: number }, index: number) => (\r\n//                   <Cell\r\n//                     key={`cell-${index}`}\r\n//                     fill={COLORS[index % COLORS.length]}\r\n//                   />\r\n//                 ))}\r\n//               </Pie>\r\n//               <Tooltip content={<CustomTooltip />} />\r\n//               <Legend />\r\n//             </PieChart>\r\n//           </ResponsiveContainer>\r\n//         </div>\r\n//         <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 md:col-span-2 transition-all duration-300 hover:shadow-xl\">\r\n//           <h3 className=\"text-xl font-bold mb-4 text-gray-800 dark:text-gray-100\">\r\n//             Your Tasks\r\n//           </h3>\r\n//           <div style={{ height: 450, width: \"100%\" }}>\r\n//             <DataGrid\r\n//               rows={tasks}\r\n//               columns={taskColumns}\r\n//               checkboxSelection\r\n//               loading={tasksLoading}\r\n//               getRowClassName={() => \"data-grid-row\"}\r\n//               getCellClassName={() => \"data-grid-cell\"}\r\n//               className={dataGridClassNames}\r\n//               sx={{\r\n//                 ...dataGridSxStyles(isDarkMode),\r\n//                 \"& .MuiDataGrid-row\": {\r\n//                   transition: \"background-color 0.2s\",\r\n//                   \"&:hover\": {\r\n//                     backgroundColor: isDarkMode ? \"#4B5563\" : \"#F3F4F6\",\r\n//                   },\r\n//                 },\r\n//               }}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HomePage;\r\n\r\n\r\n\r\n  (acc: Record<string, number>, task: Task) => {\r\n    const { priority } = task;\r\n    acc[priority as Priority] = (acc[priority as Priority] || 0) + 1;\r\n    return acc;\r\n  },\r\n  {},\r\n\"use client\";\r\n\r\nimport {\r\n  Priority,\r\n  Project,\r\n  Task,\r\n  useGetProjectsQuery,\r\n  useGetTasksQuery,\r\n} from \"@/state/api\";\r\nimport React from \"react\";\r\nimport { useAppSelector } from \"../(components)/redux\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\nimport Header from \"../(components)/Header\";\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Cell,\r\n  Legend,\r\n  Pie,\r\n  PieChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { dataGridClassNames, dataGridSxStyles } from \"../../../lib/utils\";\r\n\r\nconst taskColumns: GridColDef[] = [\r\n  { field: \"title\", headerName: \"Title\", width: 200 },\r\n  { field: \"status\", headerName: \"Status\", width: 150 },\r\n  { field: \"priority\", headerName: \"Priority\", width: 150 },\r\n  { field: \"dueDate\", headerName: \"Due Date\", width: 150 },\r\n];\r\n\r\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\nconst HomePage = () => {\r\n  const {\r\n    data: tasks,\r\n    isLoading: tasksLoading,\r\n    isError: tasksError,\r\n  } = useGetTasksQuery({ projectId: parseInt(\"1\") });\r\n  const { data: projects, isLoading: isProjectsLoading } =\r\n    useGetProjectsQuery();\r\n\r\n  const isDarkMode = useAppSelector((state) => state.global.isDarkMode);\r\n\r\n  if (tasksLoading || isProjectsLoading) return <div>Loading..</div>;\r\n  if (tasksError || !tasks || !projects) return <div>Error fetching data</div>;\r\n\r\n  const priorityCount = tasks.reduce(\r\n    (acc: Record<string, number>, task: Task) => {\r\n      const { priority } = task;\r\n      acc[priority as Priority] = (acc[priority as Priority] || 0) + 1;\r\n      return acc;\r\n    },\r\n    {},\r\n  );\r\n\r\n  const taskDistribution = Object.keys(priorityCount).map((key) => ({\r\n    name: key,\r\n    count: priorityCount[key],\r\n  }));\r\n\r\n  const statusCount = projects.reduce(\r\n    (acc: Record<string, number>, project: Project) => {\r\n      const status = project.endDate ? \"Completed\" : \"Active\";\r\n      acc[status] = (acc[status] || 0) + 1;\r\n      return acc;\r\n    },\r\n    {},\r\n  );\r\n\r\n  const projectStatus = Object.keys(statusCount).map((key) => ({\r\n    name: key,\r\n    count: statusCount[key],\r\n  }));\r\n\r\n  const chartColors = isDarkMode\r\n    ? {\r\n        bar: \"#8884d8\",\r\n        barGrid: \"#303030\",\r\n        pieFill: \"#4A90E2\",\r\n        text: \"#FFFFFF\",\r\n      }\r\n    : {\r\n        bar: \"#8884d8\",\r\n        barGrid: \"#E0E0E0\",\r\n        pieFill: \"#82ca9d\",\r\n        text: \"#000000\",\r\n      };\r\n\r\n  return (\r\n    <div className=\"container h-full w-[100%] bg-gray-100 bg-transparent p-8\">\r\n      <Header name=\"Project Management Dashboard\" />\r\n      <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\r\n        <div className=\"rounded-lg bg-white p-4 shadow dark:bg-dark-secondary\">\r\n          <h3 className=\"mb-4 text-lg font-semibold dark:text-white\">\r\n            Task Priority Distribution\r\n          </h3>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={taskDistribution}>\r\n              <CartesianGrid\r\n                strokeDasharray=\"3 3\"\r\n                stroke={chartColors.barGrid}\r\n              />\r\n              <XAxis dataKey=\"name\" stroke={chartColors.text} />\r\n              <YAxis stroke={chartColors.text} />\r\n              <Tooltip\r\n                contentStyle={{\r\n                  width: \"min-content\",\r\n                  height: \"min-content\",\r\n                }}\r\n              />\r\n              <Legend />\r\n              <Bar dataKey=\"count\" fill={chartColors.bar} />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"rounded-lg bg-white p-4 shadow dark:bg-dark-secondary\">\r\n          <h3 className=\"mb-4 text-lg font-semibold dark:text-white\">\r\n            Project Status\r\n          </h3>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n              <Pie dataKey=\"count\" data={projectStatus} fill=\"#82ca9d\" label>\r\n                {projectStatus.map((entry, index) => (\r\n                  <Cell\r\n                    key={`cell-${index}`}\r\n                    fill={COLORS[index % COLORS.length]}\r\n                  />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n              <Legend />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"rounded-lg bg-white p-4 shadow dark:bg-dark-secondary md:col-span-2\">\r\n          <h3 className=\"mb-4 text-lg font-semibold dark:text-white\">\r\n            Your Tasks\r\n          </h3>\r\n          <div style={{ height: 400, width: \"100%\" }}>\r\n            <DataGrid\r\n              rows={tasks}\r\n              columns={taskColumns}\r\n              checkboxSelection\r\n              loading={tasksLoading}\r\n              getRowClassName={() => \"data-grid-row\"}\r\n              getCellClassName={() => \"data-grid-cell\"}\r\n              className={dataGridClassNames}\r\n              sx={dataGridSxStyles(isDarkMode)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 869, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/page.tsx"],"sourcesContent":["import React from 'react'\nimport HomePage from './home/page'\nconst page = () => {\n  return <HomePage/>\n}\n\nexport default page"],"names":[],"mappings":";;;;AACA;;;AACA,MAAM,OAAO;IACX,qBAAO,8OAAC,2HAAA,CAAA,UAAQ;;;;;AAClB;uCAEe","debugId":null}}]
}