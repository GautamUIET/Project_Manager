{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/priority/reusablePriorityPage/index.tsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import { useAppSelector } from \"@/app/(components)/redux\";\r\n// import Header from \"@/app/(components)/Header\";\r\n// import ModalNewTask from \"@/app/(components)/ModalNewTask\";\r\n// import TaskCard from \"@/app/(components)/TaskCard\";\r\n// import { dataGridClassNames, dataGridSxStyles } from \"../../../../lib/utils\";\r\n// import {\r\n//   Priority,\r\n//   Task,\r\n//   useGetTasksByUserQuery,\r\n  \r\n// } from \"@/state/api\";\r\n// import { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\n// import React, { useState } from \"react\";\r\n\r\n// type Props = {\r\n//   priority: Priority;\r\n// };\r\n\r\n// const columns: GridColDef[] = [\r\n//   {\r\n//     field: \"title\",\r\n//     headerName: \"Title\",\r\n//     width: 100,\r\n//   },\r\n//   {\r\n//     field: \"description\",\r\n//     headerName: \"Description\",\r\n//     width: 200,\r\n//   },\r\n//   {\r\n//     field: \"status\",\r\n//     headerName: \"Status\",\r\n//     width: 130,\r\n//     renderCell: (params) => (\r\n//       <span className=\"inline-flex rounded-full bg-green-100 px-2 text-xs font-semibold leading-5 text-green-800\">\r\n//         {params.value}\r\n//       </span>\r\n//     ),\r\n//   },\r\n//   {\r\n//     field: \"priority\",\r\n//     headerName: \"Priority\",\r\n//     width: 75,\r\n//   },\r\n//   {\r\n//     field: \"tags\",\r\n//     headerName: \"Tags\",\r\n//     width: 130,\r\n//   },\r\n//   {\r\n//     field: \"startDate\",\r\n//     headerName: \"Start Date\",\r\n//     width: 130,\r\n//   },\r\n//   {\r\n//     field: \"dueDate\",\r\n//     headerName: \"Due Date\",\r\n//     width: 130,\r\n//   },\r\n//   {\r\n//     field: \"author\",\r\n//     headerName: \"Author\",\r\n//     width: 150,\r\n//     renderCell: (params) => params.value.username || \"Unknown\",\r\n//   },\r\n//   {\r\n//     field: \"assignee\",\r\n//     headerName: \"Assignee\",\r\n//     width: 150,\r\n//     renderCell: (params) => params.value.username || \"Unassigned\",\r\n//   },\r\n// ];\r\n\r\n// const ReusablePriorityPage = ({ priority }: Props) => {\r\n//   const [view, setView] = useState(\"list\");\r\n//   const [isModalNewTaskOpen, setIsModalNewTaskOpen] = useState(false);\r\n\r\n\r\n\r\n//   const isDarkMode = useAppSelector((state) => state.global.isDarkMode);\r\n\r\n\r\n//   return (\r\n//     <div className=\"m-5 p-4\">\r\n//       <ModalNewTask\r\n//         isOpen={isModalNewTaskOpen}\r\n//         onClose={() => setIsModalNewTaskOpen(false)}\r\n//       />\r\n//       <Header\r\n//         name=\"Priority Page\"\r\n//         buttonComponent={\r\n//           <button\r\n//             className=\"mr-3 rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700\"\r\n//             onClick={() => setIsModalNewTaskOpen(true)}\r\n//           >\r\n//             Add Task\r\n//           </button>\r\n//         }\r\n//       />\r\n//       <div className=\"mb-4 flex justify-start\">\r\n//         <button\r\n//           className={`px-4 py-2 ${\r\n//             view === \"list\" ? \"bg-gray-300\" : \"bg-white\"\r\n//           } rounded-l`}\r\n//           onClick={() => setView(\"list\")}\r\n//         >\r\n//           List\r\n//         </button>\r\n//         <button\r\n//           className={`px-4 py-2 ${\r\n//             view === \"table\" ? \"bg-gray-300\" : \"bg-white\"\r\n//           } rounded-l`}\r\n//           onClick={() => setView(\"table\")}\r\n//         >\r\n//           Table\r\n//         </button>\r\n//       </div>\r\n//       {isLoading ? (\r\n//         <div>Loading tasks...</div>\r\n//       ) : view === \"list\" ? (\r\n//         <div className=\"grid grid-cols-1 gap-4\">\r\n//           {filteredTasks?.map((task: Task) => (\r\n//             <TaskCard key={task.id} task={task} />\r\n//           ))}\r\n//         </div>\r\n//       ) : (\r\n//         view === \"table\" &&\r\n//         filteredTasks && (\r\n//           <div className=\"z-0 w-full\">\r\n//             <DataGrid\r\n//               rows={filteredTasks}\r\n//               columns={columns}\r\n//               checkboxSelection\r\n//               getRowId={(row) => row.id}\r\n//               className={dataGridClassNames}\r\n//               sx={dataGridSxStyles(isDarkMode)}\r\n//             />\r\n//           </div>\r\n//         )\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ReusablePriorityPage;\r\n\r\n\r\n\"use client\";\r\n\r\n// import { useAppSelector } from \"@/app/(components)/redux\";\r\n// import Header from \"@/app/(components)/Header\";\r\n// import ModalNewTask from \"@/app/(components)/ModalNewTask\";\r\n// import TaskCard from \"@/app/(components)/TaskCard\";\r\n// import { dataGridClassNames, dataGridSxStyles } from \"../../../../lib/utils\";\r\nimport {\r\n  Priority,\r\n  Task,\r\n  useGetAuthUserQuery,\r\n  useGetTasksByUserQuery,\r\n} from \"@/state/api\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\nimport React, { useState } from \"react\";\r\n\r\ntype Props = {\r\n  priority: Priority;\r\n};\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: \"title\",\r\n    headerName: \"Title\",\r\n    width: 100,\r\n  },\r\n  {\r\n    field: \"description\",\r\n    headerName: \"Description\",\r\n    width: 200,\r\n  },\r\n  {\r\n    field: \"status\",\r\n    headerName: \"Status\",\r\n    width: 130,\r\n    renderCell: (params) => (\r\n      <span className=\"inline-flex rounded-full bg-green-100 px-2 text-xs font-semibold leading-5 text-green-800\">\r\n        {params.value}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    field: \"priority\",\r\n    headerName: \"Priority\",\r\n    width: 75,\r\n  },\r\n  {\r\n    field: \"tags\",\r\n    headerName: \"Tags\",\r\n    width: 130,\r\n  },\r\n  {\r\n    field: \"startDate\",\r\n    headerName: \"Start Date\",\r\n    width: 130,\r\n  },\r\n  {\r\n    field: \"dueDate\",\r\n    headerName: \"Due Date\",\r\n    width: 130,\r\n  },\r\n  {\r\n    field: \"author\",\r\n    headerName: \"Author\",\r\n    width: 150,\r\n    renderCell: (params) => params.value.username || \"Unknown\",\r\n  },\r\n  {\r\n    field: \"assignee\",\r\n    headerName: \"Assignee\",\r\n    width: 150,\r\n    renderCell: (params) => params.value.username || \"Unassigned\",\r\n  },\r\n];\r\n\r\nconst ReusablePriorityPage = ({ priority }: Props) => {\r\n  const [view, setView] = useState(\"list\");\r\n  const [isModalNewTaskOpen, setIsModalNewTaskOpen] = useState(false);\r\n\r\n  const { data: currentUser } = useGetAuthUserQuery({});\r\n  const userId = currentUser?.userDetails?.userId ?? null;\r\n  const {\r\n    data: tasks,\r\n    isLoading,\r\n    isError: isTasksError,\r\n  } = useGetTasksByUserQuery(userId || 0, {\r\n    skip: userId === null,\r\n  });\r\n\r\n  const isDarkMode = useAppSelector((state) => state.global.isDarkMode);\r\n\r\n  const filteredTasks = tasks?.filter(\r\n    (task: Task) => task.priority === priority,\r\n  );\r\n\r\n  if (isTasksError || !tasks) return <div>Error fetching tasks</div>;\r\n\r\n  return (\r\n    <div className=\"m-5 p-4\">\r\n      <ModalNewTask\r\n        isOpen={isModalNewTaskOpen}\r\n        onClose={() => setIsModalNewTaskOpen(false)}\r\n      />\r\n      <Header\r\n        name=\"Priority Page\"\r\n        buttonComponent={\r\n          <button\r\n            className=\"mr-3 rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700\"\r\n            onClick={() => setIsModalNewTaskOpen(true)}\r\n          >\r\n            Add Task\r\n          </button>\r\n        }\r\n      />\r\n      <div className=\"mb-4 flex justify-start\">\r\n        <button\r\n          className={`px-4 py-2 ${\r\n            view === \"list\" ? \"bg-gray-300\" : \"bg-white\"\r\n          } rounded-l`}\r\n          onClick={() => setView(\"list\")}\r\n        >\r\n          List\r\n        </button>\r\n        <button\r\n          className={`px-4 py-2 ${\r\n            view === \"table\" ? \"bg-gray-300\" : \"bg-white\"\r\n          } rounded-l`}\r\n          onClick={() => setView(\"table\")}\r\n        >\r\n          Table\r\n        </button>\r\n      </div>\r\n      {isLoading ? (\r\n        <div>Loading tasks...</div>\r\n      ) : view === \"list\" ? (\r\n        <div className=\"grid grid-cols-1 gap-4\">\r\n          {filteredTasks?.map((task: Task) => (\r\n            <TaskCard key={task.id} task={task} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        view === \"table\" &&\r\n        filteredTasks && (\r\n          <div className=\"z-0 w-full\">\r\n            <DataGrid\r\n              rows={filteredTasks}\r\n              columns={columns}\r\n              checkboxSelection\r\n              getRowId={(row) => row.id}\r\n              className={dataGridClassNames}\r\n              sx={dataGridSxStyles(isDarkMode)}\r\n            />\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReusablePriorityPage;"],"names":[],"mappings":"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","debugId":null}}]
}