{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/Header/index.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  buttonComponent?: any;\r\n  isSmallText?: boolean;\r\n};\r\n\r\nconst Header = ({ name, buttonComponent, isSmallText = false }: Props) => {\r\n  return (\r\n    <div className=\"mb-5 flex w-full items-center justify-between\">\r\n      <h1\r\n        className={`${isSmallText ? \"text-lg\" : \"text-2xl\"} font-semibold dark:text-white`}\r\n      >\r\n        {name}\r\n      </h1>\r\n      {buttonComponent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;"],"names":[],"mappings":";;;;;AAQA,MAAM,SAAS,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,cAAc,KAAK,EAAS;IACnE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAW,GAAG,cAAc,YAAY,WAAW,8BAA8B,CAAC;0BAEjF;;;;;;YAEF;;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/lib/utils.ts"],"sourcesContent":["export const dataGridClassNames =\r\n  \"border border-gray-200 bg-white shadow hover:shadow-md transition-shadow duration-200 dark:border-stroke-dark dark:bg-dark-secondary dark:text-gray-200\";\r\n\r\nexport const dataGridSxStyles = (isDarkMode: boolean) => {\r\n  const borderColor = isDarkMode ? \"#2d3135\" : \"#e5e7eb\";\r\n  const headerBgColor = isDarkMode ? \"#1d1f21\" : \"white\";\r\n  const textColor = isDarkMode ? \"#e5e7eb\" : \"inherit\";\r\n  const iconColor = isDarkMode ? \"#a3a3a3\" : \"inherit\";\r\n  const rowHoverBg = isDarkMode ? \"#2a2e32\" : \"#f9fafb\";\r\n\r\n  return {\r\n    \"& .MuiDataGrid-root\": {\r\n      border: \"none\",\r\n    },\r\n    \"& .MuiDataGrid-columnHeaders\": {\r\n      color: textColor,\r\n      borderBottom: `1px solid ${borderColor}`,\r\n      '& [role=\"row\"] > *': {\r\n        backgroundColor: headerBgColor,\r\n        borderRight: `1px solid ${borderColor}`,\r\n        \"&:last-child\": {\r\n          borderRight: \"none\",\r\n        },\r\n      },\r\n    },\r\n    \"& .MuiDataGrid-columnHeader\": {\r\n      \"&:focus, &:focus-within\": {\r\n        outline: \"none\",\r\n      },\r\n    },\r\n    \"& .MuiDataGrid-virtualScroller\": {\r\n      backgroundColor: isDarkMode ? \"#1d1f21\" : \"white\",\r\n    },\r\n    \"& .MuiDataGrid-cell\": {\r\n      borderBottom: `1px solid ${borderColor}`,\r\n      \"&:focus, &:focus-within\": {\r\n        outline: \"none\",\r\n      },\r\n    },\r\n    \"& .MuiDataGrid-row\": {\r\n      borderBottom: `1px solid ${borderColor}`,\r\n      \"&:hover\": {\r\n        backgroundColor: rowHoverBg,\r\n      },\r\n      \"&.Mui-selected\": {\r\n        backgroundColor: isDarkMode ? \"#2a3a4a\" : \"#e0e9f5\",\r\n        \"&:hover\": {\r\n          backgroundColor: isDarkMode ? \"#2a4a5a\" : \"#d0d9e5\",\r\n        },\r\n      },\r\n    },\r\n    \"& .MuiIconButton-root\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiTablePagination-root\": {\r\n      color: textColor,\r\n      borderTop: `1px solid ${borderColor}`,\r\n    },\r\n    \"& .MuiTablePagination-selectIcon\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-menuIcon\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-sortIcon\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-footerContainer\": {\r\n      borderTop: `1px solid ${borderColor}`,\r\n    },\r\n    \"& .MuiDataGrid-toolbarContainer\": {\r\n      color: textColor,\r\n    },\r\n    \"& .MuiCheckbox-root\": {\r\n      color: iconColor,\r\n    },\r\n    \"& .MuiDataGrid-overlay\": {\r\n      color: textColor,\r\n    },\r\n  };\r\n};"],"names":[],"mappings":";;;;AAAO,MAAM,qBACX;AAEK,MAAM,mBAAmB,CAAC;IAC/B,MAAM,cAAc,aAAa,YAAY;IAC7C,MAAM,gBAAgB,aAAa,YAAY;IAC/C,MAAM,YAAY,aAAa,YAAY;IAC3C,MAAM,YAAY,aAAa,YAAY;IAC3C,MAAM,aAAa,aAAa,YAAY;IAE5C,OAAO;QACL,uBAAuB;YACrB,QAAQ;QACV;QACA,gCAAgC;YAC9B,OAAO;YACP,cAAc,CAAC,UAAU,EAAE,aAAa;YACxC,sBAAsB;gBACpB,iBAAiB;gBACjB,aAAa,CAAC,UAAU,EAAE,aAAa;gBACvC,gBAAgB;oBACd,aAAa;gBACf;YACF;QACF;QACA,+BAA+B;YAC7B,2BAA2B;gBACzB,SAAS;YACX;QACF;QACA,kCAAkC;YAChC,iBAAiB,aAAa,YAAY;QAC5C;QACA,uBAAuB;YACrB,cAAc,CAAC,UAAU,EAAE,aAAa;YACxC,2BAA2B;gBACzB,SAAS;YACX;QACF;QACA,sBAAsB;YACpB,cAAc,CAAC,UAAU,EAAE,aAAa;YACxC,WAAW;gBACT,iBAAiB;YACnB;YACA,kBAAkB;gBAChB,iBAAiB,aAAa,YAAY;gBAC1C,WAAW;oBACT,iBAAiB,aAAa,YAAY;gBAC5C;YACF;QACF;QACA,yBAAyB;YACvB,OAAO;QACT;QACA,8BAA8B;YAC5B,OAAO;YACP,WAAW,CAAC,UAAU,EAAE,aAAa;QACvC;QACA,oCAAoC;YAClC,OAAO;QACT;QACA,2BAA2B;YACzB,OAAO;QACT;QACA,2BAA2B;YACzB,OAAO;QACT;QACA,kCAAkC;YAChC,WAAW,CAAC,UAAU,EAAE,aAAa;QACvC;QACA,mCAAmC;YACjC,OAAO;QACT;QACA,uBAAuB;YACrB,OAAO;QACT;QACA,0BAA0B;YACxB,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/teams/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useGetTeamsQuery } from \"@/state/api\";\r\nimport React from \"react\";\r\nimport { useAppSelector } from \"../(components)/redux\";\r\nimport Header from \"../(components)/Header\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n  GridToolbarContainer,\r\n  GridToolbarExport,\r\n  GridToolbarFilterButton,\r\n} from \"@mui/x-data-grid\";\r\nimport { dataGridClassNames, dataGridSxStyles } from \"../../../lib/utils\";\r\n\r\nconst CustomToolbar = () => (\r\n  <GridToolbarContainer className=\"toolbar flex gap-2\">\r\n    <GridToolbarFilterButton />\r\n    <GridToolbarExport />\r\n  </GridToolbarContainer>\r\n);\r\n\r\nconst columns: GridColDef[] = [\r\n  { field: \"id\", headerName: \"Team ID\", width: 100 },\r\n  { field: \"teamName\", headerName: \"Team Name\", width: 200 },\r\n  { field: \"productOwnerUsername\", headerName: \"Product Owner\", width: 200 },\r\n  {\r\n    field: \"projectManagerUsername\",\r\n    headerName: \"Project Manager\",\r\n    width: 200,\r\n  },\r\n];\r\n\r\nconst Teams = () => {\r\n  const { data: teams, isLoading, isError } = useGetTeamsQuery();\r\n  const isDarkMode = useAppSelector((state) => state.global.isDarkMode);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (isError || !teams) return <div>Error fetching teams</div>;\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col p-8\">\r\n      <Header name=\"Teams\" />\r\n      <div style={{ height: 650, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={teams || []}\r\n          columns={columns}\r\n          pagination\r\n          slots={{\r\n            toolbar: CustomToolbar,\r\n          }}\r\n          className={dataGridClassNames}\r\n          sx={dataGridSxStyles(isDarkMode)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teams;"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AAZA;;;;;;;AAcA,MAAM,gBAAgB,kBACpB,8OAAC,qMAAA,CAAA,uBAAoB;QAAC,WAAU;;0BAC9B,8OAAC,qMAAA,CAAA,0BAAuB;;;;;0BACxB,8OAAC,+LAAA,CAAA,oBAAiB;;;;;;;;;;;AAItB,MAAM,UAAwB;IAC5B;QAAE,OAAO;QAAM,YAAY;QAAW,OAAO;IAAI;IACjD;QAAE,OAAO;QAAY,YAAY;QAAa,OAAO;IAAI;IACzD;QAAE,OAAO;QAAwB,YAAY;QAAiB,OAAO;IAAI;IACzE;QACE,OAAO;QACP,YAAY;QACZ,OAAO;IACT;CACD;AAED,MAAM,QAAQ;IACZ,MAAM,EAAE,MAAM,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,mBAAgB,AAAD;IAC3D,MAAM,aAAa,CAAA,GAAA,sIAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,QAAU,MAAM,MAAM,CAAC,UAAU;IAEpE,IAAI,WAAW,qBAAO,8OAAC;kBAAI;;;;;;IAC3B,IAAI,WAAW,CAAC,OAAO,qBAAO,8OAAC;kBAAI;;;;;;IAEnC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,gJAAA,CAAA,UAAM;gBAAC,MAAK;;;;;;0BACb,8OAAC;gBAAI,OAAO;oBAAE,QAAQ;oBAAK,OAAO;gBAAO;0BACvC,cAAA,8OAAC,yKAAA,CAAA,WAAQ;oBACP,MAAM,SAAS,EAAE;oBACjB,SAAS;oBACT,UAAU;oBACV,OAAO;wBACL,SAAS;oBACX;oBACA,WAAW,4GAAA,CAAA,qBAAkB;oBAC7B,IAAI,CAAA,GAAA,4GAAA,CAAA,mBAAgB,AAAD,EAAE;;;;;;;;;;;;;;;;;AAK/B;uCAEe","debugId":null}}]
}