{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/Header/index.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  buttonComponent?: any;\r\n  isSmallText?: boolean;\r\n};\r\n\r\nconst Header = ({ name, buttonComponent, isSmallText = false }: Props) => {\r\n  return (\r\n    <div className=\"mb-5 flex w-full items-center justify-between\">\r\n      <h1\r\n        className={`${isSmallText ? \"text-lg\" : \"text-2xl\"} font-semibold dark:text-white`}\r\n      >\r\n        {name}\r\n      </h1>\r\n      {buttonComponent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;"],"names":[],"mappings":";;;;;AAQA,MAAM,SAAS,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,cAAc,KAAK,EAAS;IACnE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,WAAW,GAAG,cAAc,YAAY,WAAW,8BAA8B,CAAC;0BAEjF;;;;;;YAEF;;;;;;;AAGP;KAXM;uCAaS","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/projects/ProjectHeader.tsx"],"sourcesContent":["import Header from \"../(components)/Header\";\r\nimport {\r\n  Clock,\r\n  Filter,\r\n  Grid3x3,\r\n  List,\r\n  PlusSquare,\r\n  Share2,\r\n  Table,\r\n} from \"lucide-react\";\r\nimport React, { useState } from \"react\";\r\n\r\ntype Props = {\r\n  activeTab: string;\r\n  setActiveTab: (tabName: string) => void;\r\n};\r\n\r\nconst ProjectHeader = ({ activeTab, setActiveTab }: Props) => {\r\n  const [isModalNewProjectOpen, setIsModalNewProjectOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"px-4 xl:px-6\">\r\n    \r\n      <div className=\"pb-6 pt-6 lg:pb-4 lg:pt-8\">\r\n        <Header\r\n          name=\"Product Design Development\"\r\n          buttonComponent={\r\n            <button\r\n              className=\"flex items-center rounded-md bg-blue-primary px-3 py-2 text-white hover:bg-blue-600\"\r\n              onClick={() => setIsModalNewProjectOpen(true)}\r\n            >\r\n              <PlusSquare className=\"mr-2 h-5 w-5\" /> New Boards\r\n            </button>\r\n          }\r\n        />\r\n      </div>\r\n\r\n      {/* TABS */}\r\n      <div className=\"flex flex-wrap-reverse gap-2 border-y border-gray-200 pb-[8px] pt-2 dark:border-stroke-dark md:items-center\">\r\n        <div className=\"flex flex-1 items-center gap-2 md:gap-4\">\r\n          <TabButton\r\n            name=\"Board\"\r\n            icon={<Grid3x3 className=\"h-5 w-5\" />}\r\n            setActiveTab={setActiveTab}\r\n            activeTab={activeTab}\r\n          />\r\n          <TabButton\r\n            name=\"List\"\r\n            icon={<List className=\"h-5 w-5\" />}\r\n            setActiveTab={setActiveTab}\r\n            activeTab={activeTab}\r\n          />\r\n          <TabButton\r\n            name=\"Timeline\"\r\n            icon={<Clock className=\"h-5 w-5\" />}\r\n            setActiveTab={setActiveTab}\r\n            activeTab={activeTab}\r\n          />\r\n          <TabButton\r\n            name=\"Table\"\r\n            icon={<Table className=\"h-5 w-5\" />}\r\n            setActiveTab={setActiveTab}\r\n            activeTab={activeTab}\r\n          />\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <button className=\"text-gray-500 hover:text-gray-600 dark:text-neutral-500 dark:hover:text-gray-300\">\r\n            <Filter className=\"h-5 w-5\" />\r\n          </button>\r\n          <button className=\"text-gray-500 hover:text-gray-600 dark:text-neutral-500 dark:hover:text-gray-300\">\r\n            <Share2 className=\"h-5 w-5\" />\r\n          </button>\r\n          <div className=\"relative\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search Task\"\r\n              className=\"rounded-md border py-1 pl-10 pr-4 focus:outline-none dark:border-dark-secondary dark:bg-dark-secondary dark:text-white\"\r\n            />\r\n            <Grid3x3 className=\"absolute left-3 top-2 h-4 w-4 text-gray-400 dark:text-neutral-500\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype TabButtonProps = {\r\n  name: string;\r\n  icon: React.ReactNode;\r\n  setActiveTab: (tabName: string) => void;\r\n  activeTab: string;\r\n};\r\n\r\nconst TabButton = ({ name, icon, setActiveTab, activeTab }: TabButtonProps) => {\r\n  const isActive = activeTab === name;\r\n\r\n  return (\r\n    <button\r\n      className={`relative flex items-center gap-2 px-1 py-2 text-gray-500 after:absolute after:-bottom-[9px] after:left-0 after:h-[1px] after:w-full hover:text-blue-600 dark:text-neutral-500 dark:hover:text-white sm:px-2 lg:px-4 ${\r\n        isActive ? \"text-blue-600 after:bg-blue-600 dark:text-white\" : \"\"\r\n      }`}\r\n      onClick={() => setActiveTab(name)}\r\n    >\r\n      {icon}\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ProjectHeader;"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;AAOA,MAAM,gBAAgB,CAAC,EAAE,SAAS,EAAE,YAAY,EAAS;;IACvD,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnE,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,mJAAA,CAAA,UAAM;oBACL,MAAK;oBACL,+BACE,6LAAC;wBACC,WAAU;wBACV,SAAS,IAAM,yBAAyB;;0CAExC,6LAAC,qNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;0BAO/C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,MAAK;gCACL,oBAAM,6LAAC,+MAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;gCACzB,cAAc;gCACd,WAAW;;;;;;0CAEb,6LAAC;gCACC,MAAK;gCACL,oBAAM,6LAAC,qMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;gCACtB,cAAc;gCACd,WAAW;;;;;;0CAEb,6LAAC;gCACC,MAAK;gCACL,oBAAM,6LAAC,uMAAA,CAAA,QAAK;oCAAC,WAAU;;;;;;gCACvB,cAAc;gCACd,WAAW;;;;;;0CAEb,6LAAC;gCACC,MAAK;gCACL,oBAAM,6LAAC,uMAAA,CAAA,QAAK;oCAAC,WAAU;;;;;;gCACvB,cAAc;gCACd,WAAW;;;;;;;;;;;;kCAGf,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAO,WAAU;0CAChB,cAAA,6LAAC,yMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;;;;;;0CAEpB,6LAAC;gCAAO,WAAU;0CAChB,cAAA,6LAAC,6MAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;;;;;;0CAEpB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,MAAK;wCACL,aAAY;wCACZ,WAAU;;;;;;kDAEZ,6LAAC,+MAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM/B;GAnEM;KAAA;AA4EN,MAAM,YAAY,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAkB;IACxE,MAAM,WAAW,cAAc;IAE/B,qBACE,6LAAC;QACC,WAAW,CAAC,oNAAoN,EAC9N,WAAW,oDAAoD,IAC/D;QACF,SAAS,IAAM,aAAa;;YAE3B;YACA;;;;;;;AAGP;MAdM;uCAgBS","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/projects/BoardView/index.tsx"],"sourcesContent":["import { useGetTasksQuery, useUpdateTaskStatusMutation } from \"@/state/api\";\r\nimport React from \"react\";\r\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { Task as TaskType } from \"@/state/api\";\r\nimport { EllipsisVertical, MessageSquareMore, Plus } from \"lucide-react\";\r\nimport { format } from \"date-fns\";\r\nimport Image from \"next/image\";\r\n\r\ntype BoardProps = {\r\n  id: string;\r\n  setIsModalNewTaskOpen: (isOpen: boolean) => void;\r\n};\r\n\r\nconst taskStatus = [\"To Do\", \"Work In Progress\", \"Under Review\", \"Completed\"];\r\n\r\nconst BoardView = ({ id, setIsModalNewTaskOpen }: BoardProps) => {\r\n  const {\r\n    data: tasks,\r\n    isLoading,\r\n    error,\r\n  } = useGetTasksQuery({ projectId: Number(id) });\r\n  const [updateTaskStatus] = useUpdateTaskStatusMutation();\r\n\r\n  const moveTask = (taskId: number, toStatus: string) => {\r\n    updateTaskStatus({ taskId, status: toStatus });\r\n  };\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>An error occurred while fetching tasks</div>;\r\n\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className=\"grid grid-cols-1 gap-4 p-4 md:grid-cols-2 xl:grid-cols-4\">\r\n        {taskStatus.map((status) => (\r\n          <TaskColumn\r\n            key={status}\r\n            status={status}\r\n            tasks={tasks || []}\r\n            moveTask={moveTask}\r\n            setIsModalNewTaskOpen={setIsModalNewTaskOpen}\r\n          />\r\n        ))}\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n};\r\n\r\ntype TaskColumnProps = {\r\n  status: string;\r\n  tasks: TaskType[];\r\n  moveTask: (taskId: number, toStatus: string) => void;\r\n  setIsModalNewTaskOpen: (isOpen: boolean) => void;\r\n};\r\n\r\nconst TaskColumn = ({\r\n  status,\r\n  tasks,\r\n  moveTask,\r\n  setIsModalNewTaskOpen,\r\n}: TaskColumnProps) => {\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"task\",\r\n    drop: (item: { id: number }) => moveTask(item.id, status),\r\n    collect: (monitor: any) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }));\r\n\r\n  const tasksCount = tasks.filter((task) => task.status === status).length;\r\n\r\n  const statusColor: any = {\r\n    \"To Do\": \"#2563EB\",\r\n    \"Work In Progress\": \"#059669\",\r\n    \"Under Review\": \"#D97706\",\r\n    \"Completed\": \"#000000\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={(instance) => {\r\n        drop(instance);\r\n      }}\r\n      className={`sl:py-4 rounded-lg py-2 xl:px-2 ${isOver ? \"bg-blue-100 dark:bg-neutral-950\" : \"\"}`}\r\n    >\r\n      <div className=\"mb-3 flex w-full\">\r\n        <div\r\n          className={`w-2 !bg-[${statusColor[status]}] rounded-s-lg`}\r\n          style={{ backgroundColor: statusColor[status] }}\r\n        />\r\n        <div className=\"flex w-full items-center justify-between rounded-e-lg bg-white px-5 py-4 dark:bg-dark-secondary\">\r\n          <h3 className=\"flex items-center text-lg font-semibold dark:text-white\">\r\n            {status}{\" \"}\r\n            <span\r\n              className=\"ml-2 inline-block rounded-full bg-gray-200 p-1 text-center text-sm leading-none dark:bg-dark-tertiary\"\r\n              style={{ width: \"1.5rem\", height: \"1.5rem\" }}\r\n            >\r\n              {tasksCount}\r\n            </span>\r\n          </h3>\r\n          <div className=\"flex items-center gap-1\">\r\n            <button className=\"flex h-6 w-5 items-center justify-center dark:text-neutral-500\">\r\n              <EllipsisVertical size={26} />\r\n            </button>\r\n            <button\r\n              className=\"flex h-6 w-6 items-center justify-center rounded bg-gray-200 dark:bg-dark-tertiary dark:text-white\"\r\n              onClick={() => setIsModalNewTaskOpen(true)}\r\n            >\r\n              <Plus size={16} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {tasks\r\n        .filter((task) => task.status === status)\r\n        .map((task) => (\r\n          <Task key={task.id} task={task} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype TaskProps = {\r\n  task: TaskType;\r\n};\r\n\r\nconst Task = ({ task }: TaskProps) => {\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: \"task\",\r\n    item: { id: task.id },\r\n    collect: (monitor: any) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  const taskTagsSplit = task.tags ? task.tags.split(\",\") : [];\r\n\r\n  const formattedStartDate = task.startDate\r\n    ? format(new Date(task.startDate), \"P\")\r\n    : \"\";\r\n  const formattedDueDate = task.dueDate\r\n    ? format(new Date(task.dueDate), \"P\")\r\n    : \"\";\r\n    \r\n    \r\n  const numberOfComments = (task.comments && task.comments.length) || 0;\r\n\r\n  \r\n  const PriorityTag = ({ priority }: { priority: TaskType[\"priority\"] }) => (\r\n    <div\r\n      className={`rounded-full px-2 py-1 text-xs font-semibold ${\r\n        priority === \"Urgent\"\r\n          ? \"bg-red-200 text-red-700\"\r\n          : priority === \"High\"\r\n            ? \"bg-yellow-200 text-yellow-700\"\r\n            : priority === \"Medium\"\r\n              ? \"bg-green-200 text-green-700\"\r\n              : priority === \"Low\"\r\n                ? \"bg-blue-200 text-blue-700\"\r\n                : \"bg-gray-200 text-gray-700\"\r\n      }`}\r\n    >\r\n      {priority}\r\n    </div>\r\n  );\r\n\r\n\r\n  return(\r\n    <div\r\n    ref={(instance) => {\r\n      drag(instance);\r\n    }}\r\n    className={`mb-4 rounded-md bg-white shadow dark:bg-dark-secondary ${\r\n      isDragging ? \"opacity-50\" : \"opacity-100\"\r\n    }`}\r\n  >\r\n    {task.attachments && task.attachments.length > 0 && (\r\n      <Image\r\n        src= {`/${task.attachments[0].fileURL}`}\r\n        alt={task.attachments[0].fileName}\r\n        width={400}\r\n        height={200}\r\n        className=\"h-auto w-full rounded-t-md\"\r\n      />\r\n    )}\r\n\r\n\r\n<div className=\"p-4 md:p-6\">\r\n        <div className=\"flex items-start justify-between\">\r\n          <div className=\"flex flex-1 flex-wrap items-center gap-2\">\r\n            {task.priority && <PriorityTag priority={task.priority} />}\r\n            <div className=\"flex gap-2\">\r\n              {taskTagsSplit.map((tag) => (\r\n                <div\r\n                  key={tag}\r\n                  className=\"rounded-full bg-blue-100 px-2 py-1 text-xs\"\r\n                >\r\n                  {\" \"}\r\n                  {tag}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <button className=\"flex h-6 w-4 flex-shrink-0 items-center justify-center dark:text-neutral-500\">\r\n            <EllipsisVertical size={26} />\r\n          </button>\r\n        </div>\r\n    \r\n\r\n        <div className=\"my-3 flex justify-between\">\r\n          <h4 className=\"text-md font-bold dark:text-white\">{task.title}</h4>\r\n          {typeof task.points === \"number\" && (\r\n            <div className=\"text-xs font-semibold dark:text-white\">\r\n              {task.points} pts\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"text-xs text-gray-500 dark:text-neutral-500\">\r\n          {formattedStartDate && <span>{formattedStartDate} - </span>}\r\n          {formattedDueDate && <span>{formattedDueDate}</span>}\r\n        </div>\r\n        <p className=\"text-sm text-gray-600 dark:text-neutral-500\">\r\n          {task.description}\r\n        </p>\r\n         \r\n\r\n        <div className=\"mt-4 border-t border-gray-200 dark:border-stroke-dark\" />\r\n        \r\n        <div className=\"mt-3 flex items-center justify-between\">\r\n          <div className=\"flex -space-x-[6px] overflow-hidden\">\r\n            {task.assignee && (\r\n              <Image\r\n                key={task.assignee.userId}\r\n                src={`/${task.assignee.profilePictureUrl!}`}\r\n                alt={task.assignee.username}\r\n                width={30}\r\n                height={30}\r\n                className=\"h-8 w-8 rounded-full border-2 border-white object-cover dark:border-dark-secondary\"\r\n              />\r\n            )}\r\n            {task.author && (\r\n              <Image\r\n                key={task.author.userId}\r\n                src={`/${task.author.profilePictureUrl!}`}\r\n                alt={task.author.username}\r\n                width={30}\r\n                height={30}\r\n                className=\"h-8 w-8 rounded-full border-2 border-white object-cover dark:border-dark-secondary\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"flex items-center text-gray-500 dark:text-neutral-500\">\r\n            <MessageSquareMore size={20} />\r\n            <span className=\"ml-1 text-sm dark:text-neutral-400\">\r\n              {numberOfComments}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        </div>\r\n  </div>\r\n\r\n)\r\n}\r\n  export default BoardView;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 776, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/%28components%29/TaskCard/index.tsx"],"sourcesContent":["// import { Task } from \"@/state/api\";\r\n// import { format } from \"date-fns\";\r\n// import Image from \"next/image\";\r\n// import React from \"react\";\r\n\r\n// type Props = {\r\n//   task: Task;\r\n// };\r\n\r\n// const TaskCard = ({ task }: Props) => {\r\n//   return (\r\n//     <div className=\"mb-3 rounded bg-white p-4 shadow dark:bg-dark-secondary dark:text-white\">\r\n//       {task.attachments && task.attachments.length > 0 && (\r\n//         <div>\r\n//           <strong>Attachments:</strong>\r\n//           <div className=\"flex flex-wrap\">\r\n//             {task.attachments && task.attachments.length > 0 && (\r\n//               <Image\r\n//                 src={`/${task.attachments[0].fileURL}`}\r\n//                 alt={task.attachments[0].fileName}\r\n//                 width={400}\r\n//                 height={200}\r\n//                 className=\"rounded-md\"\r\n//               />\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       <p>\r\n//         <strong>ID:</strong> {task.id}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Title:</strong> {task.title}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Description:</strong>{\" \"}\r\n//         {task.description || \"No description provided\"}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Status:</strong> {task.status}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Priority:</strong> {task.priority}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Tags:</strong> {task.tags || \"No tags\"}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Start Date:</strong>{\" \"}\r\n//         {task.startDate ? format(new Date(task.startDate), \"P\") : \"Not set\"}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Due Date:</strong>{\" \"}\r\n//         {task.dueDate ? format(new Date(task.dueDate), \"P\") : \"Not set\"}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Author:</strong>{\" \"}\r\n//         {task.author ? task.author.username : \"Unknown\"}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Assignee:</strong>{\" \"}\r\n//         {task.assignee ? task.assignee.username : \"Unassigned\"}\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TaskCard;\r\n\r\n\r\nimport { Task } from \"@/state/api\";\r\nimport { format } from \"date-fns\";\r\nimport Image from \"next/image\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  task: Task;\r\n};\r\n\r\nconst priorityColors = {\r\n  HIGH: \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\",\r\n  MEDIUM: \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\",\r\n  LOW: \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\",\r\n};\r\n\r\nconst statusColors = {\r\n  TODO: \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200\",\r\n  IN_PROGRESS: \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\",\r\n  DONE: \"bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200\",\r\n  BLOCKED: \"bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200\",\r\n};\r\n\r\nconst TaskCard = ({ task }: Props) => {\r\n  return (\r\n    <div className=\"mb-4 overflow-hidden rounded-lg border border-gray-200 bg-white shadow-lg transition-all hover:shadow-xl dark:border-gray-700 dark:bg-dark-secondary\">\r\n      {/* Header with title and ID */}\r\n      <div className=\"border-b border-gray-200 bg-gray-50 px-4 py-3 dark:border-gray-700 dark:bg-gray-800\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-gray-800 dark:text-white\">\r\n            {task.title}\r\n          </h3>\r\n          <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            #{task.id}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main content */}\r\n      <div className=\"p-4\">\r\n        {/* Description */}\r\n        <p className=\"mb-4 text-gray-700 dark:text-gray-300\">\r\n          {task.description || \"No description provided\"}\r\n        </p>\r\n\r\n        {/* Image attachment */}\r\n        {task.attachments && task.attachments.length > 0 && (\r\n          <div className=\"mb-4 overflow-hidden rounded-md border border-gray-200 dark:border-gray-700\">\r\n            <Image\r\n              src={`/${task.attachments[0].fileURL}`}\r\n              alt={task.attachments[0].fileName}\r\n              width={600}\r\n              height={300}\r\n              className=\"h-auto w-full object-cover\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Metadata grid */}\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          {/* Status */}\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Status\r\n            </p>\r\n            <span\r\n              className={`inline-flex items-center rounded-full px-3 py-1 text-xs font-medium ${\r\n                statusColors[task.status as keyof typeof statusColors] ||\r\n                \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200\"\r\n              }`}\r\n            >\r\n              {task.status}\r\n            </span>\r\n          </div>\r\n\r\n          {/* Priority */}\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Priority\r\n            </p>\r\n            <span\r\n              className={`inline-flex items-center rounded-full px-3 py-1 text-xs font-medium ${\r\n                priorityColors[task.priority as keyof typeof priorityColors] ||\r\n                \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200\"\r\n              }`}\r\n            >\r\n              {task.priority}\r\n            </span>\r\n          </div>\r\n\r\n          {/* Dates */}\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Start Date\r\n            </p>\r\n            <p className=\"text-sm text-gray-800 dark:text-gray-200\">\r\n              {task.startDate\r\n                ? format(new Date(task.startDate), \"MMM d, yyyy\")\r\n                : \"Not set\"}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Due Date\r\n            </p>\r\n            <p className=\"text-sm text-gray-800 dark:text-gray-200\">\r\n              {task.dueDate\r\n                ? format(new Date(task.dueDate), \"MMM d, yyyy\")\r\n                : \"Not set\"}\r\n            </p>\r\n          </div>\r\n\r\n          {/* People */}\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Author\r\n            </p>\r\n            <p className=\"text-sm text-gray-800 dark:text-gray-200\">\r\n              {task.author ? task.author.username : \"Unknown\"}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Assignee\r\n            </p>\r\n            <p className=\"text-sm text-gray-800 dark:text-gray-200\">\r\n              {task.assignee ? task.assignee.username : \"Unassigned\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tags */}\r\n        {task.tags && (\r\n          <div className=\"mt-4\">\r\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n              Tags\r\n            </p>\r\n            <div className=\"mt-1 flex flex-wrap gap-2\">\r\n              {task.tags.split(\",\").map((tag, index) => (\r\n                <span\r\n                  key={index}\r\n                  className=\"rounded-full bg-blue-50 px-2 py-1 text-xs text-blue-600 dark:bg-blue-900/50 dark:text-blue-200\"\r\n                >\r\n                  {tag.trim()}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1140, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/projects/ListView/index.tsx"],"sourcesContent":["import Header from \"@/app/(components)/Header\";\r\nimport TaskCard from \"@/app/(components)/TaskCard\";\r\nimport { Task, useGetTasksQuery } from \"@/state/api\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  id: string;\r\n  setIsModalNewTaskOpen: (isOpen: boolean) => void;\r\n};\r\n\r\nconst ListView = ({ id, setIsModalNewTaskOpen }: Props) => {\r\n  const {\r\n    data: tasks,\r\n    error,\r\n    isLoading,\r\n  } = useGetTasksQuery({ projectId: Number(id) });\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>An error occurred while fetching tasks</div>;\r\n\r\n  return (\r\n    <div className=\"px-4 pb-8 xl:px-6\">\r\n      <div className=\"pt-5\">\r\n        <Header\r\n          name=\"List\"\r\n          buttonComponent={\r\n            <button\r\n              className=\"flex items-center rounded bg-blue-primary px-3 py-2 text-white hover:bg-blue-600\"\r\n              onClick={() => setIsModalNewTaskOpen(true)}\r\n            >\r\n              Add Task\r\n            </button>\r\n          }\r\n          isSmallText\r\n        />\r\n      </div>\r\n      <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3 lg:gap-6\">\r\n        {tasks?.map((task: Task) => <TaskCard key={task.id} task={task} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListView;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAQA,MAAM,WAAW,CAAC,EAAE,EAAE,EAAE,qBAAqB,EAAS;;IACpD,MAAM,EACJ,MAAM,KAAK,EACX,KAAK,EACL,SAAS,EACV,GAAG,CAAA,GAAA,sHAAA,CAAA,mBAAgB,AAAD,EAAE;QAAE,WAAW,OAAO;IAAI;IAE7C,IAAI,WAAW,qBAAO,6LAAC;kBAAI;;;;;;IAC3B,IAAI,OAAO,qBAAO,6LAAC;kBAAI;;;;;;IAEvB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,mJAAA,CAAA,UAAM;oBACL,MAAK;oBACL,+BACE,6LAAC;wBACC,WAAU;wBACV,SAAS,IAAM,sBAAsB;kCACtC;;;;;;oBAIH,WAAW;;;;;;;;;;;0BAGf,6LAAC;gBAAI,WAAU;0BACZ,OAAO,IAAI,CAAC,qBAAe,6LAAC,qJAAA,CAAA,UAAQ;wBAAe,MAAM;uBAAf,KAAK,EAAE;;;;;;;;;;;;;;;;AAI1D;GA/BM;;QAKA,sHAAA,CAAA,mBAAgB;;;KALhB;uCAiCS","debugId":null}},
    {"offset": {"line": 1237, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/projects/TimeLineView/index.tsx"],"sourcesContent":["import { useAppSelector } from \"@/app/(components)/redux\";\r\nimport { useGetTasksQuery } from \"@/state/api\";\r\nimport { DisplayOption, Gantt, ViewMode } from \"gantt-task-react\";\r\nimport \"gantt-task-react/dist/index.css\";\r\nimport React, { useMemo, useState } from \"react\";\r\n\r\ntype Props = {\r\n  id: string;\r\n  setIsModalNewTaskOpen: (isOpen: boolean) => void;\r\n};\r\n\r\ntype TaskTypeItems = \"task\" | \"milestone\" | \"project\";\r\n\r\nconst Timeline = ({ id, setIsModalNewTaskOpen }: Props) => {\r\n  const isDarkMode = useAppSelector((state) => state.global.isDarkMode);\r\n  const {\r\n    data: tasks,\r\n    error,\r\n    isLoading,\r\n  } = useGetTasksQuery({ projectId: Number(id) });\r\n\r\n  const [displayOptions, setDisplayOptions] = useState<DisplayOption>({\r\n    viewMode: ViewMode.Month,\r\n    locale: \"en-US\",\r\n  });\r\n\r\n  const ganttTasks = useMemo(() => {\r\n    return (\r\n      tasks?.map((task) => ({\r\n        start: new Date(task.startDate as string),\r\n        end: new Date(task.dueDate as string),\r\n        name: task.title,\r\n        id: `Task-${task.id}`,\r\n        type: \"task\" as TaskTypeItems,\r\n        progress: task.points ? (task.points / 10) * 100 : 0,\r\n        isDisabled: false,\r\n      })) || []\r\n    );\r\n  }, [tasks]);\r\n\r\n  const handleViewModeChange = (\r\n    event: React.ChangeEvent<HTMLSelectElement>,\r\n  ) => {\r\n    setDisplayOptions((prev) => ({\r\n      ...prev,\r\n      viewMode: event.target.value as ViewMode,\r\n    }));\r\n  };\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error || !tasks) return <div>An error occurred while fetching tasks</div>;\r\n\r\n  return (\r\n    <div className=\"px-4 xl:px-6\">\r\n      <div className=\"flex flex-wrap items-center justify-between gap-2 py-5\">\r\n        <h1 className=\"me-2 text-lg font-bold dark:text-white\">\r\n          Project Tasks Timeline\r\n        </h1>\r\n        <div className=\"relative inline-block w-64\">\r\n          <select\r\n            className=\"focus:shadow-outline block w-full appearance-none rounded border border-gray-400 bg-white px-4 py-2 pr-8 leading-tight shadow hover:border-gray-500 focus:outline-none dark:border-dark-secondary dark:bg-dark-secondary dark:text-white\"\r\n            value={displayOptions.viewMode}\r\n            onChange={handleViewModeChange}\r\n          >\r\n            <option value={ViewMode.Day}>Day</option>\r\n            <option value={ViewMode.Week}>Week</option>\r\n            <option value={ViewMode.Month}>Month</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"overflow-hidden rounded-md bg-white shadow dark:bg-dark-secondary dark:text-white\">\r\n        <div className=\"timeline\">\r\n          <Gantt\r\n            tasks={ganttTasks}\r\n            {...displayOptions}\r\n            columnWidth={displayOptions.viewMode === ViewMode.Month ? 150 : 100}\r\n            listCellWidth=\"100px\"\r\n            barBackgroundColor={isDarkMode ? \"#101214\" : \"#aeb8c2\"}\r\n            barBackgroundSelectedColor={isDarkMode ? \"#000\" : \"#9ba1a6\"}\r\n          />\r\n        </div>\r\n        <div className=\"px-4 pb-5 pt-1\">\r\n          <button\r\n            className=\"flex items-center rounded bg-blue-primary px-3 py-2 text-white hover:bg-blue-600\"\r\n            onClick={() => setIsModalNewTaskOpen(true)}\r\n          >\r\n            Add New Task\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAEA;;;;;;;;AASA,MAAM,WAAW,CAAC,EAAE,EAAE,EAAE,qBAAqB,EAAS;;IACpD,MAAM,aAAa,CAAA,GAAA,yIAAA,CAAA,iBAAc,AAAD;+CAAE,CAAC,QAAU,MAAM,MAAM,CAAC,UAAU;;IACpE,MAAM,EACJ,MAAM,KAAK,EACX,KAAK,EACL,SAAS,EACV,GAAG,CAAA,GAAA,sHAAA,CAAA,mBAAgB,AAAD,EAAE;QAAE,WAAW,OAAO;IAAI;IAE7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;QAClE,UAAU,oKAAA,CAAA,WAAQ,CAAC,KAAK;QACxB,QAAQ;IACV;IAEA,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;wCAAE;YACzB,OACE,OAAO;gDAAI,CAAC,OAAS,CAAC;wBACpB,OAAO,IAAI,KAAK,KAAK,SAAS;wBAC9B,KAAK,IAAI,KAAK,KAAK,OAAO;wBAC1B,MAAM,KAAK,KAAK;wBAChB,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;wBACrB,MAAM;wBACN,UAAU,KAAK,MAAM,GAAG,AAAC,KAAK,MAAM,GAAG,KAAM,MAAM;wBACnD,YAAY;oBACd,CAAC;kDAAM,EAAE;QAEb;uCAAG;QAAC;KAAM;IAEV,MAAM,uBAAuB,CAC3B;QAEA,kBAAkB,CAAC,OAAS,CAAC;gBAC3B,GAAG,IAAI;gBACP,UAAU,MAAM,MAAM,CAAC,KAAK;YAC9B,CAAC;IACH;IAEA,IAAI,WAAW,qBAAO,6LAAC;kBAAI;;;;;;IAC3B,IAAI,SAAS,CAAC,OAAO,qBAAO,6LAAC;kBAAI;;;;;;IAEjC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAyC;;;;;;kCAGvD,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,WAAU;4BACV,OAAO,eAAe,QAAQ;4BAC9B,UAAU;;8CAEV,6LAAC;oCAAO,OAAO,oKAAA,CAAA,WAAQ,CAAC,GAAG;8CAAE;;;;;;8CAC7B,6LAAC;oCAAO,OAAO,oKAAA,CAAA,WAAQ,CAAC,IAAI;8CAAE;;;;;;8CAC9B,6LAAC;oCAAO,OAAO,oKAAA,CAAA,WAAQ,CAAC,KAAK;8CAAE;;;;;;;;;;;;;;;;;;;;;;;0BAKrC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,oKAAA,CAAA,QAAK;4BACJ,OAAO;4BACN,GAAG,cAAc;4BAClB,aAAa,eAAe,QAAQ,KAAK,oKAAA,CAAA,WAAQ,CAAC,KAAK,GAAG,MAAM;4BAChE,eAAc;4BACd,oBAAoB,aAAa,YAAY;4BAC7C,4BAA4B,aAAa,SAAS;;;;;;;;;;;kCAGtD,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,WAAU;4BACV,SAAS,IAAM,sBAAsB;sCACtC;;;;;;;;;;;;;;;;;;;;;;;AAOX;GAhFM;;QACe,yIAAA,CAAA,iBAAc;QAK7B,sHAAA,CAAA,mBAAgB;;;KANhB;uCAkFS","debugId":null}},
    {"offset": {"line": 1433, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/91798/OneDrive/Desktop/Project_Management/client/src/app/projects/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState,use } from \"react\";\r\nimport ProjectHeader from \"@/app/projects/ProjectHeader\";\r\nimport BoardView from \"../BoardView\";\r\nimport ListView from \"../ListView\";\r\nimport Timeline from \"../TimeLineView\";\r\nimport Table from \"../TableView\";\r\ntype Props = {\r\n  params: Promise<{ id: string }>;\r\n};\r\nconst Project = ({ params }: Props) => {\r\n  const { id } = use(params);\r\n  const [activeTab, setActiveTab] = useState(\"Board\");\r\n  const [isModalNewTaskOpen, setIsModalNewTaskOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      {/* <ModalNewTask\r\n        isOpen={isModalNewTaskOpen}\r\n        onClose={() => setIsModalNewTaskOpen(false)}\r\n        id={id}\r\n      /> */}\r\n      <ProjectHeader activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n      {activeTab === \"Board\" && (\r\n        <BoardView id={id} setIsModalNewTaskOpen={setIsModalNewTaskOpen} />\r\n      )}\r\n\r\n  \r\n      {activeTab === \"List\" && (\r\n        <ListView id={id} setIsModalNewTaskOpen={setIsModalNewTaskOpen} />\r\n      )}\r\n\r\n     {activeTab === \"Timeline\" && (\r\n        <Timeline id={id} setIsModalNewTaskOpen={setIsModalNewTaskOpen} />\r\n      )}\r\n\r\n    {activeTab === \"Table\" && (\r\n        <Table id={id} setIsModalNewTaskOpen={setIsModalNewTaskOpen} />\r\n      )} \r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AANA;;;;;;;AAWA,MAAM,UAAU,CAAC,EAAE,MAAM,EAAS;;IAChC,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,MAAG,AAAD,EAAE;IACnB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7D,qBACE,6LAAC;;0BAMC,6LAAC,2IAAA,CAAA,UAAa;gBAAC,WAAW;gBAAW,cAAc;;;;;;YAElD,cAAc,yBACb,6LAAC,gJAAA,CAAA,UAAS;gBAAC,IAAI;gBAAI,uBAAuB;;;;;;YAI3C,cAAc,wBACb,6LAAC,+IAAA,CAAA,UAAQ;gBAAC,IAAI;gBAAI,uBAAuB;;;;;;YAG3C,cAAc,4BACZ,6LAAC,mJAAA,CAAA,UAAQ;gBAAC,IAAI;gBAAI,uBAAuB;;;;;;YAG5C,cAAc,yBACX,6LAAC;gBAAM,IAAI;gBAAI,uBAAuB;;;;;;;;;;;;AAM9C;GAlCM;KAAA;uCAoCS","debugId":null}}]
}